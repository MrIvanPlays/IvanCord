From cfdcef60d2c61eed17beb9abe9dee7daffebae3a Mon Sep 17 00:00:00 2001
From: MrIvanPlays <pekov.ivan@abv.bg>
Date: Sun, 14 Apr 2019 09:16:21 +0300
Subject: [PATCH] Add restart command


diff --git a/api/src/main/java/net/md_5/bungee/api/ProxyConfig.java b/api/src/main/java/net/md_5/bungee/api/ProxyConfig.java
index cbcf8a24..2a37d10d 100644
--- a/api/src/main/java/net/md_5/bungee/api/ProxyConfig.java
+++ b/api/src/main/java/net/md_5/bungee/api/ProxyConfig.java
@@ -239,4 +239,21 @@ public interface ProxyConfig
      * @return Should we disable entity metadata rewriting?
      */
     boolean isDisableEntityMetadataRewrite();
+
+    // IvanCord start
+
+    /**
+     * Gets the restart message for the proxy
+     *
+     * @return restart message
+     */
+    String getRestartMessage();
+
+    /**
+     * Gets the restart script path
+     *
+     * @return restart script
+     */
+    String getRestartScriptPath();
+    // IvanCord end
 }
diff --git a/proxy/src/main/java/com/github/mrivanplays/ivancord/command/CommandRestart.java b/proxy/src/main/java/com/github/mrivanplays/ivancord/command/CommandRestart.java
new file mode 100644
index 00000000..49dac411
--- /dev/null
+++ b/proxy/src/main/java/com/github/mrivanplays/ivancord/command/CommandRestart.java
@@ -0,0 +1,76 @@
+/*
+ * Copyright 2019 Ivan Pekov (MrIvanPlays)
+
+ * Permission is hereby granted, free of charge, to any person obtaining a copy of
+ * this software and associated documentation files (the "Software"), to deal in the
+ * Software without restriction, including without limitation the rights to use, copy,
+ * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software,
+ * and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
+
+ * The above copyright notice and this permission notice shall be included in all copies
+ * or substantial portions of the Software.
+
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
+ * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
+ * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
+ * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
+ * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
+ * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ **/
+package com.github.mrivanplays.ivancord.command;
+
+import java.io.IOException;
+import java.nio.file.Files;
+import java.nio.file.Path;
+import java.nio.file.Paths;
+import java.util.Locale;
+
+import com.google.common.base.Joiner;
+import net.md_5.bungee.BungeeCord;
+import net.md_5.bungee.api.CommandSender;
+import net.md_5.bungee.api.plugin.Command;
+
+public class CommandRestart extends Command
+{
+
+    public CommandRestart()
+    {
+        super( "grestart", "ivancord.command.restart" );
+    }
+
+    @Override
+    public void execute(CommandSender sender, String[] args)
+    {
+        Runtime.getRuntime().addShutdownHook( new Thread( () -> {
+            Path scriptPath = Paths.get( BungeeCord.getInstance().getConfig().getRestartScriptPath() ).toAbsolutePath();
+            if ( Files.exists( scriptPath ) )
+            {
+                System.out.println( "Attempting restart with " + scriptPath );
+            } else
+            {
+                System.out.println( "Startup script " + scriptPath + " does not exist! Stopping proxy." );
+            }
+            try
+            {
+                String os = System.getProperty( "os.name" ).toLowerCase( Locale.ROOT );
+                if ( os.contains( "win" ) )
+                {
+                    Runtime.getRuntime().exec( "cmd /c start " + scriptPath );
+                } else
+                {
+                    Runtime.getRuntime().exec( "sh " + scriptPath );
+                }
+            } catch ( IOException e )
+            {
+                e.printStackTrace();
+            }
+        }, "Restart thread" ) );
+        if ( args.length == 0 )
+        {
+            BungeeCord.getInstance().stop( BungeeCord.getInstance().getConfig().getRestartMessage() );
+        } else
+        {
+            BungeeCord.getInstance().stop( Joiner.on( ' ' ).join( args ) );
+        }
+    }
+}
diff --git a/proxy/src/main/java/com/github/mrivanplays/ivancord/conf/IvanCordConfiguration.java b/proxy/src/main/java/com/github/mrivanplays/ivancord/conf/IvanCordConfiguration.java
index 96bb60f5..2fa867f4 100644
--- a/proxy/src/main/java/com/github/mrivanplays/ivancord/conf/IvanCordConfiguration.java
+++ b/proxy/src/main/java/com/github/mrivanplays/ivancord/conf/IvanCordConfiguration.java
@@ -22,16 +22,24 @@ package com.github.mrivanplays.ivancord.conf;
 import java.io.File;
 
 import io.github.waterfallmc.waterfall.conf.WaterfallConfiguration;
+import lombok.Getter;
 import net.md_5.bungee.conf.YamlConfig;
 
+@Getter
 public class IvanCordConfiguration extends WaterfallConfiguration
 {
 
+    private String restartMessage = "Proxy is restarting";
+    private String restartScriptPath = "./restart.sh";
+
     @Override
     public void load()
     {
         super.load();
         YamlConfig config = new YamlConfig( new File( "ivancord.yml" ) );
         config.load( false );
+
+        restartMessage = config.getString( "restart_message", restartMessage );
+        restartScriptPath = config.getString( "restart_script_path", restartScriptPath );
     }
 }
diff --git a/proxy/src/main/java/net/md_5/bungee/BungeeCord.java b/proxy/src/main/java/net/md_5/bungee/BungeeCord.java
index 40885afc..da1ccf1d 100644
--- a/proxy/src/main/java/net/md_5/bungee/BungeeCord.java
+++ b/proxy/src/main/java/net/md_5/bungee/BungeeCord.java
@@ -91,6 +91,7 @@ import net.md_5.bungee.query.RemoteQuery;
 import net.md_5.bungee.scheduler.BungeeScheduler;
 import net.md_5.bungee.util.CaseInsensitiveMap;
 
+import com.github.mrivanplays.ivancord.command.CommandRestart;
 import com.github.mrivanplays.ivancord.modules.CommandAlert;
 import com.github.mrivanplays.ivancord.modules.CommandAlertRaw;
 import com.github.mrivanplays.ivancord.modules.CommandFind;
@@ -231,6 +232,7 @@ public class BungeeCord extends ProxyServer
         getPluginManager().registerCommand( null, new CommandIP() );
         getPluginManager().registerCommand( null, new CommandBungee() );
         getPluginManager().registerCommand( null, new CommandPerms() );
+        getPluginManager().registerCommand( null, new CommandRestart() ); // IvanCord specific command
 
         // IvanCord start - register module commands
         getPluginManager().registerCommand( null, new CommandAlert() );
-- 
2.21.0.windows.1

