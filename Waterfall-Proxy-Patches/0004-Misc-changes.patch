From f4a75acac97d453dad5137d1275730600ec4bafc Mon Sep 17 00:00:00 2001
From: MrIvanPlays <pekov.ivan@abv.bg>
Date: Sat, 13 Apr 2019 20:32:49 +0300
Subject: [PATCH] Misc changes


diff --git a/api/src/main/java/net/md_5/bungee/api/Callback.java b/api/src/main/java/net/md_5/bungee/api/Callback.java
index 0cccc175..b040daa4 100644
--- a/api/src/main/java/net/md_5/bungee/api/Callback.java
+++ b/api/src/main/java/net/md_5/bungee/api/Callback.java
@@ -6,6 +6,7 @@ package net.md_5.bungee.api;
  *
  * @param <V> the type of result
  */
+@FunctionalInterface // IvanCord - functional
 public interface Callback<V>
 {
 
diff --git a/api/src/main/java/net/md_5/bungee/api/connection/ProxiedPlayer.java b/api/src/main/java/net/md_5/bungee/api/connection/ProxiedPlayer.java
index f7459860..b7b89c42 100644
--- a/api/src/main/java/net/md_5/bungee/api/connection/ProxiedPlayer.java
+++ b/api/src/main/java/net/md_5/bungee/api/connection/ProxiedPlayer.java
@@ -326,6 +326,18 @@ public interface ProxiedPlayer extends Connection, CommandSender
      */
     void sendTitle(Title title);
 
+    // IvanCord start - add sendTitle with strings
+
+    /**
+     * Sends a title to this player.
+     *
+     * @param title title message to send
+     * @param subtitle sub title message to send
+     */
+    void sendTitle(String title, String subtitle);
+
+    // IvanCord
+
     /**
      * Gets whether this player is using a FML client.
      * <p>
diff --git a/api/src/main/java/net/md_5/bungee/api/plugin/Event.java b/api/src/main/java/net/md_5/bungee/api/plugin/Event.java
index e2e01ecb..1ae37ef5 100644
--- a/api/src/main/java/net/md_5/bungee/api/plugin/Event.java
+++ b/api/src/main/java/net/md_5/bungee/api/plugin/Event.java
@@ -1,5 +1,7 @@
 package net.md_5.bungee.api.plugin;
 
+import net.md_5.bungee.api.ProxyServer;
+
 /**
  * Dummy class which all callable events must extend.
  */
@@ -12,4 +14,21 @@ public abstract class Event
     public void postCall()
     {
     }
+
+    // IvanCord start - add shortcut to call the event
+
+    /**
+     * Calls the representing event. If the event is a
+     * {@link Cancellable}, it will return if the event
+     * is being cancelled. Otherwise, it will return true.
+     *
+     * @return if cancellable the result of {@link Cancellable#isCancelled()},
+     *         otherwise <code>true</code>
+     */
+    public final boolean call()
+    {
+        ProxyServer.getInstance().getPluginManager().callEvent( this );
+        return !( this instanceof Cancellable ) || ( (Cancellable) this ).isCancelled();
+    }
+    // IvanCord end
 }
diff --git a/api/src/main/java/net/md_5/bungee/api/plugin/PluginManager.java b/api/src/main/java/net/md_5/bungee/api/plugin/PluginManager.java
index 884f78c8..216ee68b 100644
--- a/api/src/main/java/net/md_5/bungee/api/plugin/PluginManager.java
+++ b/api/src/main/java/net/md_5/bungee/api/plugin/PluginManager.java
@@ -454,11 +454,13 @@ public class PluginManager
      */
     public void registerListener(Plugin plugin, Listener listener)
     {
+        /* IvanCord - remove that outdated and dumb warning
         for ( Method method : listener.getClass().getDeclaredMethods() )
         {
             Preconditions.checkArgument( !method.isAnnotationPresent( Subscribe.class ),
                     "Listener %s has registered using deprecated subscribe annotation! Please update to @EventHandler.", listener );
         }
+         */
         eventBus.register( listener );
         listenersByPlugin.put( plugin, listener );
     }
diff --git a/log4j/src/main/resources/log4j2.xml b/log4j/src/main/resources/log4j2.xml
index 3b3525f0..1462f89a 100644
--- a/log4j/src/main/resources/log4j2.xml
+++ b/log4j/src/main/resources/log4j2.xml
@@ -3,7 +3,7 @@
     <Appenders>
         <TerminalConsole name="TerminalConsole">
             <PatternLayout>
-                <LoggerNamePatternSelector defaultPattern="%highlightError{[%d{HH:mm:ss} %level] [%logger]: %minecraftFormatting{%msg}%n%xEx}">
+                <LoggerNamePatternSelector defaultPattern="%highlightError{[%d{HH:mm:ss} %level]: [%logger] %minecraftFormatting{%msg}%n%xEx}"> <!-- IvanCord - changed -->
                     <!-- Log root and BungeeCord loggers without prefix -->
                     <PatternMatch key=",BungeeCord" pattern="%highlightError{[%d{HH:mm:ss} %level]: %minecraftFormatting{%msg}%n%xEx}" />
                 </LoggerNamePatternSelector>
@@ -11,7 +11,7 @@
         </TerminalConsole>
         <RollingRandomAccessFile name="File" fileName="logs/latest.log" filePattern="logs/%d{yyyy-MM-dd}-%i.log.gz" immediateFlush="false">
             <PatternLayout>
-                <LoggerNamePatternSelector defaultPattern="[%d{HH:mm:ss}] [%t/%level] [%logger]: %minecraftFormatting{%msg}{strip}%n">
+                <LoggerNamePatternSelector defaultPattern="[%d{HH:mm:ss}] [%t/%level]: [%logger] %minecraftFormatting{%msg}{strip}%n"> <!-- IvanCord - changed -->
                     <!-- Log root and BungeeCord loggers without prefix -->
                     <PatternMatch key=",BungeeCord" pattern="[%d{HH:mm:ss}] [%t/%level]: %minecraftFormatting{%msg}{strip}%n" />
                 </LoggerNamePatternSelector>
diff --git a/proxy/src/main/java/net/md_5/bungee/BungeeCord.java b/proxy/src/main/java/net/md_5/bungee/BungeeCord.java
index c3a266c0..2bc94aa4 100644
--- a/proxy/src/main/java/net/md_5/bungee/BungeeCord.java
+++ b/proxy/src/main/java/net/md_5/bungee/BungeeCord.java
@@ -472,8 +472,10 @@ public class BungeeCord extends ProxyServer
                 }
 
                 getLogger().info( "Closing IO threads" );
-                bossEventLoopGroup.shutdownGracefully();
-                workerEventLoopGroup.shutdownGracefully();
+                // IvanCord start - speed up shutdown
+                bossEventLoopGroup.shutdownGracefully( 100, 5000, TimeUnit.MILLISECONDS );
+                workerEventLoopGroup.shutdownGracefully( 100, 500, TimeUnit.MILLISECONDS );
+                // IvanCord end
                 while (true) {
                     try {
                         bossEventLoopGroup.awaitTermination(Long.MAX_VALUE, TimeUnit.NANOSECONDS);
diff --git a/proxy/src/main/java/net/md_5/bungee/ServerConnector.java b/proxy/src/main/java/net/md_5/bungee/ServerConnector.java
index 1375d1e2..925150d6 100644
--- a/proxy/src/main/java/net/md_5/bungee/ServerConnector.java
+++ b/proxy/src/main/java/net/md_5/bungee/ServerConnector.java
@@ -282,6 +282,13 @@ public class ServerConnector extends PacketHandler
                 user.unsafe().sendPacket( new net.md_5.bungee.protocol.packet.BossBar( bossbar, 1 ) );
             }
             user.getSentBossBars().clear();
+            // IvanCord start
+            // Resets the tab header and footer when server changing.
+            // The server being connected can not have a default tablist
+            // plugin so it will be displayed the one from the previous
+            // server. I dont want this thats why i make it like that
+            user.resetTabHeader();
+            // IvanCord end
 
             // Update debug info from login packet
             user.unsafe().sendPacket( new EntityStatus( user.getClientEntityId(), login.isReducedDebugInfo() ? EntityStatus.DEBUG_INFO_REDUCED : EntityStatus.DEBUG_INFO_NORMAL ) );
diff --git a/proxy/src/main/java/net/md_5/bungee/UserConnection.java b/proxy/src/main/java/net/md_5/bungee/UserConnection.java
index 15f7c5b5..77db6392 100644
--- a/proxy/src/main/java/net/md_5/bungee/UserConnection.java
+++ b/proxy/src/main/java/net/md_5/bungee/UserConnection.java
@@ -421,6 +421,9 @@ public final class UserConnection implements ProxiedPlayer
 
     public void disconnect0(final BaseComponent... reason)
     {
+        // IvanCord start - reset tab header and footer
+        resetTabHeader();
+        // IvanCord end
         if ( !ch.isClosing() )
         {
             bungee.getLogger().log( Level.INFO, "[{0}] disconnected with: {1}", new Object[]
@@ -712,6 +715,14 @@ public final class UserConnection implements ProxiedPlayer
         title.send( this );
     }
 
+    // IvanCord start
+    @Override
+    public void sendTitle(String title, String subtitle)
+    {
+        bungee.createTitle().title( TextComponent.fromLegacyText( title ) ).subTitle( TextComponent.fromLegacyText( subtitle ) ).send( this );
+    }
+    // IvanCord end
+
     public String getExtraDataInHandshake()
     {
         return this.getPendingConnection().getExtraDataInHandshake();
diff --git a/proxy/src/main/java/net/md_5/bungee/command/CommandBungee.java b/proxy/src/main/java/net/md_5/bungee/command/CommandBungee.java
index 430ed174..30dfc7db 100644
--- a/proxy/src/main/java/net/md_5/bungee/command/CommandBungee.java
+++ b/proxy/src/main/java/net/md_5/bungee/command/CommandBungee.java
@@ -10,7 +10,7 @@ public class CommandBungee extends Command
 
     public CommandBungee()
     {
-        super( "bungee" );
+        super( "bungee", "bungeecord.command.bungee" ); // IvanCord - add missing permission
     }
 
     @Override
diff --git a/proxy/src/main/java/net/md_5/bungee/command/CommandEnd.java b/proxy/src/main/java/net/md_5/bungee/command/CommandEnd.java
index d87d0b95..055b3bb6 100644
--- a/proxy/src/main/java/net/md_5/bungee/command/CommandEnd.java
+++ b/proxy/src/main/java/net/md_5/bungee/command/CommandEnd.java
@@ -14,7 +14,7 @@ public class CommandEnd extends Command
 
     public CommandEnd()
     {
-        super( "end", "bungeecord.command.end" );
+        super( "end", "bungeecord.command.end", "stop" ); // IvanCord - alias stop
     }
 
     @Override
diff --git a/proxy/src/main/java/net/md_5/bungee/command/CommandPerms.java b/proxy/src/main/java/net/md_5/bungee/command/CommandPerms.java
index 610825ca..d47518e4 100644
--- a/proxy/src/main/java/net/md_5/bungee/command/CommandPerms.java
+++ b/proxy/src/main/java/net/md_5/bungee/command/CommandPerms.java
@@ -13,7 +13,7 @@ public class CommandPerms extends Command
 
     public CommandPerms()
     {
-        super( "perms" );
+        super( "perms", "bungeecord.command.ip" ); // IvanCord - add missing permission
     }
 
     @Override
-- 
2.22.0.windows.1

