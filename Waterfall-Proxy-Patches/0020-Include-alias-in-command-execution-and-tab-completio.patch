From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: MrIvanPlays <pekov.ivan@abv.bg>
Date: Sat, 21 Sep 2019 17:24:49 +0300
Subject: [PATCH] Include alias in command execution and tab completion


diff --git a/api/src/main/java/net/md_5/bungee/api/plugin/Command.java b/api/src/main/java/net/md_5/bungee/api/plugin/Command.java
index b45663279d13bfc903433afaef38954ca6952be7..b1e818a0c3b9fb2f8cf479eb66142df9f9442a0a 100644
--- a/api/src/main/java/net/md_5/bungee/api/plugin/Command.java
+++ b/api/src/main/java/net/md_5/bungee/api/plugin/Command.java
@@ -53,8 +53,27 @@ public abstract class Command
      *
      * @param sender the executor of this command
      * @param args arguments used to invoke this command
+     * @deprecated new execute method, including alias. Migrate to {@link #execute(CommandSender, String, String[])}
      */
-    public abstract void execute(CommandSender sender, String[] args);
+    @Deprecated // IvanCord start
+    public void execute(CommandSender sender, String[] args)
+    {
+    } // IvanCord end
+
+    // IvanCord start
+
+    /**
+     * Execute this command with the specified sender, alias and arguments.
+     *
+     * @param sender the executor of this command
+     * @param alias the alias of which the command was invoked
+     * @param args arguments used to invoke this command
+     */
+    public void execute(CommandSender sender, String alias, String[] args)
+    {
+        execute( sender, args );
+    }
+    // IvanCord end
 
     /**
      * Check if this command can be executed by the given sender.
diff --git a/api/src/main/java/net/md_5/bungee/api/plugin/PluginManager.java b/api/src/main/java/net/md_5/bungee/api/plugin/PluginManager.java
index 80050649bef0fe40d16c7bbcfe9892fea0a7c109..17f70c7c3aa7ea200c6d8346d1df69df2b9f5b63 100644
--- a/api/src/main/java/net/md_5/bungee/api/plugin/PluginManager.java
+++ b/api/src/main/java/net/md_5/bungee/api/plugin/PluginManager.java
@@ -215,7 +215,7 @@ public final class PluginManager
                         sender.getName(), commandLine
                     } );
                 }
-                command.execute( sender, args );
+                command.execute( sender, split[0], args ); // IvanCord
         // Waterfall start - split command & tab complete exception handlers for exception event
         } catch ( Exception ex ) {
             sender.sendMessage( ChatColor.RED + "An internal error occurred whilst executing this command, please check the console log for details." );
@@ -226,7 +226,7 @@ public final class PluginManager
             } else if ( commandLine.contains( " " ) && command instanceof TabExecutor )
             {
         try { // Waterfall - split command & tab complete exception handlers for exception event
-                for ( String s : ( (TabExecutor) command ).onTabComplete( sender, args ) )
+                for ( String s : ( (TabExecutor) command ).onTabComplete( sender, split[0], args ) ) // IvanCord
                 {
                     tabResults.add( s );
                 }
diff --git a/api/src/main/java/net/md_5/bungee/api/plugin/TabExecutor.java b/api/src/main/java/net/md_5/bungee/api/plugin/TabExecutor.java
index fb63ea4d1252321a4397b8780ff1121db5392390..17c2238733fd11d13bd1b68acf0d5f8855ab1273 100644
--- a/api/src/main/java/net/md_5/bungee/api/plugin/TabExecutor.java
+++ b/api/src/main/java/net/md_5/bungee/api/plugin/TabExecutor.java
@@ -5,5 +5,19 @@ import net.md_5.bungee.api.CommandSender;
 public interface TabExecutor
 {
 
-    public Iterable<String> onTabComplete(CommandSender sender, String[] args);
+    /**
+     * @deprecated new tab complete method, including alias. Migrate to {@link #onTabComplete(CommandSender, String, String[])}
+     */
+    @Deprecated // IvanCord start
+    default Iterable<String> onTabComplete(CommandSender sender, String[] args)
+    {
+        return null;
+    } // IvanCord end
+
+    // IvanCord start
+    default Iterable<String> onTabComplete(CommandSender sender, String alias, String[] args)
+    {
+        return onTabComplete( sender, args );
+    }
+    // IvanCord end
 }
