From d3a3f2f88070b019442673c5430fa5c636908e32 Mon Sep 17 00:00:00 2001
From: MrIvanPlays <pekov.ivan@abv.bg>
Date: Sun, 28 Apr 2019 12:17:44 +0300
Subject: [PATCH] Handle join quit messages thru proxy


diff --git a/api/src/main/java/net/md_5/bungee/api/ProxyConfig.java b/api/src/main/java/net/md_5/bungee/api/ProxyConfig.java
index 1b3b1a5d..e1ac739d 100644
--- a/api/src/main/java/net/md_5/bungee/api/ProxyConfig.java
+++ b/api/src/main/java/net/md_5/bungee/api/ProxyConfig.java
@@ -263,5 +263,14 @@ public interface ProxyConfig
      * @return should the player kicked be transferred to lobby
      */
     boolean isKickToLobby();
+
+    /**
+     * If this is true, a listeners to {@link com.github.mrivanplays.ivancord.api.event.ServerChatEvent},
+     * {@link net.md_5.bungee.api.event.ServerConnectEvent} and {@link net.md_5.bungee.api.event.ServerDisconnectEvent}
+     * will be registered, which will handle the join and quit messages thru the proxy.
+     *
+     * @return should the join and quit messages be handled thru the proxy
+     */
+    boolean isHandleJoinQuitMessagesThruProxy();
     // IvanCord end
 }
diff --git a/proxy/src/main/java/com/github/mrivanplays/ivancord/conf/IvanCordConfiguration.java b/proxy/src/main/java/com/github/mrivanplays/ivancord/conf/IvanCordConfiguration.java
index 95703d1c..86f74169 100644
--- a/proxy/src/main/java/com/github/mrivanplays/ivancord/conf/IvanCordConfiguration.java
+++ b/proxy/src/main/java/com/github/mrivanplays/ivancord/conf/IvanCordConfiguration.java
@@ -32,6 +32,7 @@ public class IvanCordConfiguration extends WaterfallConfiguration
     private String restartMessage = "Proxy is restarting";
     private String restartScriptPath = "./restart.sh";
     private boolean kickToLobby = true;
+    private boolean handleJoinQuitMessagesThruProxy = true;
 
     @Override
     public void load()
@@ -43,5 +44,6 @@ public class IvanCordConfiguration extends WaterfallConfiguration
         restartMessage = config.getString( "restart_message", restartMessage );
         restartScriptPath = config.getString( "restart_script_path", restartScriptPath );
         kickToLobby = config.getBoolean( "kick_to_lobby", kickToLobby );
+        handleJoinQuitMessagesThruProxy = config.getBoolean( "handle_joinAndQuit_messages_thru_proxy", handleJoinQuitMessagesThruProxy );
     }
 }
diff --git a/proxy/src/main/java/com/github/mrivanplays/ivancord/listeners/JoinQuitHandler.java b/proxy/src/main/java/com/github/mrivanplays/ivancord/listeners/JoinQuitHandler.java
new file mode 100644
index 00000000..7bdf1042
--- /dev/null
+++ b/proxy/src/main/java/com/github/mrivanplays/ivancord/listeners/JoinQuitHandler.java
@@ -0,0 +1,78 @@
+/*
+ * Copyright 2019 Ivan Pekov (MrIvanPlays)
+
+ * Permission is hereby granted, free of charge, to any person obtaining a copy of
+ * this software and associated documentation files (the "Software"), to deal in the
+ * Software without restriction, including without limitation the rights to use, copy,
+ * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software,
+ * and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
+
+ * The above copyright notice and this permission notice shall be included in all copies
+ * or substantial portions of the Software.
+
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
+ * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
+ * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
+ * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
+ * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
+ * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ **/
+package com.github.mrivanplays.ivancord.listeners;
+
+import net.md_5.bungee.api.ChatColor;
+import net.md_5.bungee.api.ChatMessageType;
+import net.md_5.bungee.api.ProxyServer;
+import net.md_5.bungee.api.chat.BaseComponent;
+import net.md_5.bungee.api.chat.TextComponent;
+import net.md_5.bungee.api.chat.TranslatableComponent;
+import net.md_5.bungee.api.event.ServerConnectEvent;
+import net.md_5.bungee.api.event.ServerDisconnectEvent;
+import net.md_5.bungee.api.plugin.Listener;
+import net.md_5.bungee.event.EventHandler;
+
+import com.github.mrivanplays.ivancord.api.event.ServerChatEvent;
+
+public class JoinQuitHandler implements Listener
+{
+
+    @EventHandler
+    public void onServerChat(ServerChatEvent event) // stop the messages, which are sent by server
+    {
+        BaseComponent[] message = event.getMessage();
+        if ( message.length < 1 )
+        {
+            return;
+        }
+
+        if ( message[0] instanceof TranslatableComponent )
+        {
+            String key = ( (TranslatableComponent) message[0] ).getTranslate();
+            if ( key.equalsIgnoreCase( "multiplayer.player.joined" ) || key.equalsIgnoreCase( "multiplayer.player.quit" ) )
+            {
+                event.setCancelled( true );
+            }
+        }
+    }
+
+    // handle them by the proxy
+
+    @EventHandler
+    public void onServerConnect(ServerConnectEvent event)
+    {
+        event.getTarget().getPlayers().forEach( player -> player.sendMessage( ChatMessageType.ACTION_BAR,
+        TextComponent.fromLegacyText( ChatColor.DARK_GREEN + event.getPlayer().getName() + " has joined." ) ) );
+
+        ProxyServer.getInstance().getPlayers().forEach( player -> player.sendMessage( TextComponent.fromLegacyText(
+        ChatColor.translateAlternateColorCodes( '&', "&7[&9" + event.getTarget().getName() + "&7] &e" + event.getPlayer().getName() + " has joined." ) ) ) );
+    }
+
+    @EventHandler
+    public void onServerDisconnect(ServerDisconnectEvent event)
+    {
+        event.getTarget().getPlayers().forEach( player -> player.sendMessage( ChatMessageType.ACTION_BAR,
+        TextComponent.fromLegacyText( ChatColor.DARK_RED + event.getPlayer().getName() + " has quit." ) ) );
+
+        ProxyServer.getInstance().getPlayers().forEach( player -> player.sendMessage( TextComponent.fromLegacyText(
+        ChatColor.translateAlternateColorCodes( '&', "&7[&9" + event.getTarget().getName() + "&7] &e" + event.getPlayer().getName() + " has quit." ) ) ) );
+    }
+}
diff --git a/proxy/src/main/java/net/md_5/bungee/BungeeCord.java b/proxy/src/main/java/net/md_5/bungee/BungeeCord.java
index f1444439..76d05bda 100644
--- a/proxy/src/main/java/net/md_5/bungee/BungeeCord.java
+++ b/proxy/src/main/java/net/md_5/bungee/BungeeCord.java
@@ -92,6 +92,7 @@ import net.md_5.bungee.scheduler.BungeeScheduler;
 import net.md_5.bungee.util.CaseInsensitiveMap;
 
 import com.github.mrivanplays.ivancord.command.CommandRestart;
+import com.github.mrivanplays.ivancord.listeners.JoinQuitHandler;
 import com.github.mrivanplays.ivancord.listeners.ServerKickListener;
 import com.github.mrivanplays.ivancord.modules.CommandAlert;
 import com.github.mrivanplays.ivancord.modules.CommandAlertRaw;
@@ -249,6 +250,11 @@ public class BungeeCord extends ProxyServer
         {
             getPluginManager().registerListener( null, new ServerKickListener() );
         }
+        // check if we should handle join and quit messages thru proxy
+        if ( getConfig().isHandleJoinQuitMessagesThruProxy() )
+        {
+            getPluginManager().registerListener( null, new JoinQuitHandler() );
+        }
         // IvanCord end
 
         if ( !Boolean.getBoolean( "net.md_5.bungee.native.disable" ) )
-- 
2.21.0.windows.1

