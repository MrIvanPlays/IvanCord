From 03c563871c9f3228965490ef6d90a873522de2bf Mon Sep 17 00:00:00 2001
From: MrIvanPlays <pekov.ivan@abv.bg>
Date: Tue, 25 Jun 2019 17:21:37 +0300
Subject: [PATCH] Add basic server operator techniques


diff --git a/api/src/main/java/net/md_5/bungee/api/connection/ProxiedPlayer.java b/api/src/main/java/net/md_5/bungee/api/connection/ProxiedPlayer.java
index 9c83abbb..2b4d97a3 100644
--- a/api/src/main/java/net/md_5/bungee/api/connection/ProxiedPlayer.java
+++ b/api/src/main/java/net/md_5/bungee/api/connection/ProxiedPlayer.java
@@ -412,4 +412,22 @@ public interface ProxiedPlayer extends Connection, CommandSender
     void playSound(Position position, String sound, int category, float volume, float pitch);
 
     // IvanCord end
+
+    // IvanCord start - add global op system
+
+    /**
+     * Returns whenever this player is a server operator on
+     * proxy level.
+     *
+     * @return <code>true</code> if op on proxy level, otherwise <code>false</code>
+     */
+    boolean isGlobalOp();
+
+    /**
+     * Sets the player's global/proxy level server operator
+     *
+     * @param globalOp value
+     */
+    void setGlobalOp(boolean globalOp);
+    // IvanCord end
 }
diff --git a/proxy/src/main/java/com/mrivanplays/ivancord/commands/op/CommandDeop.java b/proxy/src/main/java/com/mrivanplays/ivancord/commands/op/CommandDeop.java
new file mode 100644
index 00000000..e1a2d854
--- /dev/null
+++ b/proxy/src/main/java/com/mrivanplays/ivancord/commands/op/CommandDeop.java
@@ -0,0 +1,66 @@
+/*
+ * Copyright 2019 Ivan Pekov (MrIvanPlays)
+
+ * Permission is hereby granted, free of charge, to any person obtaining a copy of
+ * this software and associated documentation files (the "Software"), to deal in the
+ * Software without restriction, including without limitation the rights to use, copy,
+ * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software,
+ * and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
+
+ * The above copyright notice and this permission notice shall be included in all copies
+ * or substantial portions of the Software.
+
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
+ * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
+ * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
+ * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
+ * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
+ * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ **/
+package com.mrivanplays.ivancord.commands.op;
+
+import net.md_5.bungee.api.ChatColor;
+import net.md_5.bungee.api.CommandSender;
+import net.md_5.bungee.api.ProxyServer;
+import net.md_5.bungee.api.chat.BaseComponent;
+import net.md_5.bungee.api.chat.ComponentBuilder;
+import net.md_5.bungee.api.chat.TextComponent;
+import net.md_5.bungee.api.connection.ProxiedPlayer;
+import net.md_5.bungee.command.PlayerCommand;
+
+public class CommandDeop extends PlayerCommand
+{
+
+    public CommandDeop()
+    {
+        super( "gdeop", "ivancord.command.deop" );
+    }
+
+    @Override
+    public void execute(CommandSender sender, String[] args)
+    {
+        if ( args.length == 0 )
+        {
+            sender.sendMessage( errorMessage( "Usage: /gdeop <player>" ) );
+            return;
+        }
+        ProxiedPlayer player = ProxyServer.getInstance().getPlayer( args[0] );
+        if ( player == null )
+        {
+            sender.sendMessage( errorMessage( "Player not found" ) );
+            return;
+        }
+        if ( !player.isGlobalOp() )
+        {
+            sender.sendMessage( new TextComponent( "Nothing has changed, " + player.getName() + " was not a global server operator." ) );
+            return;
+        }
+        player.setGlobalOp( false );
+        sender.sendMessage( new TextComponent( "Made " + player.getName() + " not a global server operator." ) );
+    }
+
+    private BaseComponent[] errorMessage(String message)
+    {
+        return new ComponentBuilder( message ).color( ChatColor.RED ).create();
+    }
+}
diff --git a/proxy/src/main/java/com/mrivanplays/ivancord/commands/op/CommandOp.java b/proxy/src/main/java/com/mrivanplays/ivancord/commands/op/CommandOp.java
new file mode 100644
index 00000000..8871b546
--- /dev/null
+++ b/proxy/src/main/java/com/mrivanplays/ivancord/commands/op/CommandOp.java
@@ -0,0 +1,66 @@
+/*
+ * Copyright 2019 Ivan Pekov (MrIvanPlays)
+
+ * Permission is hereby granted, free of charge, to any person obtaining a copy of
+ * this software and associated documentation files (the "Software"), to deal in the
+ * Software without restriction, including without limitation the rights to use, copy,
+ * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software,
+ * and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
+
+ * The above copyright notice and this permission notice shall be included in all copies
+ * or substantial portions of the Software.
+
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
+ * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
+ * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
+ * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
+ * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
+ * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ **/
+package com.mrivanplays.ivancord.commands.op;
+
+import net.md_5.bungee.api.ChatColor;
+import net.md_5.bungee.api.CommandSender;
+import net.md_5.bungee.api.ProxyServer;
+import net.md_5.bungee.api.chat.BaseComponent;
+import net.md_5.bungee.api.chat.ComponentBuilder;
+import net.md_5.bungee.api.chat.TextComponent;
+import net.md_5.bungee.api.connection.ProxiedPlayer;
+import net.md_5.bungee.command.PlayerCommand;
+
+public class CommandOp extends PlayerCommand
+{
+
+    public CommandOp()
+    {
+        super( "gop", "ivancord.command.op" );
+    }
+
+    @Override
+    public void execute(CommandSender sender, String[] args)
+    {
+        if ( args.length == 0 )
+        {
+            sender.sendMessage( errorMessage( "Usage: /gop <player>" ) );
+            return;
+        }
+        ProxiedPlayer player = ProxyServer.getInstance().getPlayer( args[0] );
+        if ( player == null )
+        {
+            sender.sendMessage( errorMessage( "Player not found" ) );
+            return;
+        }
+        if ( player.isGlobalOp() )
+        {
+            sender.sendMessage( new TextComponent( "Nothing has changed, " + player.getName() + " was already a global server operator." ) );
+            return;
+        }
+        player.setGlobalOp( true );
+        sender.sendMessage( new TextComponent( "Made " + player.getName() + " a global server operator." ) );
+    }
+
+    private BaseComponent[] errorMessage(String message)
+    {
+        return new ComponentBuilder( message ).color( ChatColor.RED ).create();
+    }
+}
diff --git a/proxy/src/main/java/com/mrivanplays/ivancord/conf/OpsConfiguration.java b/proxy/src/main/java/com/mrivanplays/ivancord/conf/OpsConfiguration.java
new file mode 100644
index 00000000..001e399d
--- /dev/null
+++ b/proxy/src/main/java/com/mrivanplays/ivancord/conf/OpsConfiguration.java
@@ -0,0 +1,89 @@
+/*
+ * Copyright 2019 Ivan Pekov (MrIvanPlays)
+
+ * Permission is hereby granted, free of charge, to any person obtaining a copy of
+ * this software and associated documentation files (the "Software"), to deal in the
+ * Software without restriction, including without limitation the rights to use, copy,
+ * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software,
+ * and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
+
+ * The above copyright notice and this permission notice shall be included in all copies
+ * or substantial portions of the Software.
+
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
+ * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
+ * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
+ * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
+ * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
+ * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ **/
+package com.mrivanplays.ivancord.conf;
+
+import java.io.File;
+import java.io.IOException;
+import java.util.ArrayList;
+import java.util.List;
+import java.util.logging.Level;
+
+import net.md_5.bungee.api.ProxyServer;
+import net.md_5.bungee.config.Configuration;
+import net.md_5.bungee.config.ConfigurationProvider;
+import net.md_5.bungee.config.JsonConfiguration;
+
+public class OpsConfiguration
+{
+
+    private List<String> ops;
+    private File file;
+    private Configuration config;
+
+    public OpsConfiguration()
+    {
+        this.ops = new ArrayList<>();
+        this.file = new File( "ops.json" );
+        if ( !file.exists() )
+        {
+            try
+            {
+                file.createNewFile();
+            } catch ( IOException ignored )
+            {
+            }
+        }
+        try
+        {
+            this.config = ConfigurationProvider.getProvider( JsonConfiguration.class ).load( file );
+        } catch ( IOException e )
+        {
+            file.renameTo( new File( "ops.json.old" ) );
+            ProxyServer.getInstance().getLogger().log( Level.WARNING, "Cannot load ops, resetting them" );
+        }
+        if ( config == null )
+        {
+            return;
+        }
+        for ( String key : config.getKeys() )
+        {
+            if ( config.getBoolean( key ) )
+            {
+                ops.add( key );
+            }
+        }
+    }
+
+    public boolean isOp(String name)
+    {
+        return ops.contains( name );
+    }
+
+    public void setOp(String name, boolean value)
+    {
+        config.set( name, value );
+        try
+        {
+            ConfigurationProvider.getProvider( JsonConfiguration.class ).save( config, file );
+        } catch ( IOException ignored )
+        {
+        }
+    }
+}
diff --git a/proxy/src/main/java/net/md_5/bungee/BungeeCord.java b/proxy/src/main/java/net/md_5/bungee/BungeeCord.java
index 71916fa1..dfd2dff3 100644
--- a/proxy/src/main/java/net/md_5/bungee/BungeeCord.java
+++ b/proxy/src/main/java/net/md_5/bungee/BungeeCord.java
@@ -96,6 +96,9 @@ import com.mrivanplays.ivancord.modules.CommandList;
 import com.mrivanplays.ivancord.modules.CommandSend;
 import com.mrivanplays.ivancord.modules.CommandServer;
 import com.mrivanplays.ivancord.commands.CommandPlugins;
+import com.mrivanplays.ivancord.conf.OpsConfiguration;
+import com.mrivanplays.ivancord.commands.op.CommandDeop;
+import com.mrivanplays.ivancord.commands.op.CommandOp;
 
 /**
  * Main BungeeCord proxy class.
@@ -112,6 +115,10 @@ public class BungeeCord extends ProxyServer
      */
     @Getter
     public final Configuration config = new com.mrivanplays.ivancord.conf.IvanCordConfiguration(); // IvanCord - ivancord specific configuration
+    // IvanCord start
+    @Getter
+    private OpsConfiguration opsConfiguration = new OpsConfiguration();
+    // IvanCord end
     /**
      * Localization bundle.
      */
@@ -241,6 +248,8 @@ public class BungeeCord extends ProxyServer
 
         // IvanCord start - specific commands to IvanCord
         getPluginManager().registerCommand( null, new CommandPlugins() );
+        getPluginManager().registerCommand( null, new CommandOp() );
+        getPluginManager().registerCommand( null, new CommandDeop() );
         // IvanCord end
 
         if ( !Boolean.getBoolean( "net.md_5.bungee.native.disable" ) )
diff --git a/proxy/src/main/java/net/md_5/bungee/UserConnection.java b/proxy/src/main/java/net/md_5/bungee/UserConnection.java
index d2ee764c..ffe4e78d 100644
--- a/proxy/src/main/java/net/md_5/bungee/UserConnection.java
+++ b/proxy/src/main/java/net/md_5/bungee/UserConnection.java
@@ -116,6 +116,10 @@ public final class UserConnection implements ProxiedPlayer
     @Getter
     private Position position;
     // IvanCord end
+    // IvanCord start
+    @Getter
+    private boolean globalOp;
+    // IvanCord end
     @Getter
     private int compressionThreshold = -1;
     // Used for trying multiple servers in order
@@ -203,6 +207,9 @@ public final class UserConnection implements ProxiedPlayer
         {
             forgeClientHandler.setFmlTokenInHandshake( true );
         }
+        // IvanCord start
+        globalOp = BungeeCord.getInstance().getOpsConfiguration().isOp( getName() );
+        // IvanCord end
     }
 
     public void sendPacket(PacketWrapper packet)
@@ -576,7 +583,7 @@ public final class UserConnection implements ProxiedPlayer
     @Override
     public boolean hasPermission(String permission)
     {
-        return bungee.getPluginManager().callEvent( new PermissionCheckEvent( this, permission, permissions.contains( permission ) ) ).hasPermission();
+        return bungee.getPluginManager().callEvent( new PermissionCheckEvent( this, permission, globalOp || permissions.contains( permission ) ) ).hasPermission(); // IvanCord
     }
 
     @Override
@@ -798,6 +805,13 @@ public final class UserConnection implements ProxiedPlayer
         new SoundPlayedEvent( this, position,
                 PlaySound.NAME_FUNCTION.apply( sound, getPendingConnection().getVersion() ), volume, pitch, category ).call();
     }
+
+    @Override
+    public void setGlobalOp(boolean globalOp)
+    {
+        BungeeCord.getInstance().getOpsConfiguration().setOp( getName(), globalOp );
+        this.globalOp = globalOp;
+    }
     // IvanCord end
 
     // IvanCord start - comment this. Not used anywhere, so...
diff --git a/proxy/src/main/java/net/md_5/bungee/conf/YamlConfig.java b/proxy/src/main/java/net/md_5/bungee/conf/YamlConfig.java
index 0ef56ad5..5c885702 100644
--- a/proxy/src/main/java/net/md_5/bungee/conf/YamlConfig.java
+++ b/proxy/src/main/java/net/md_5/bungee/conf/YamlConfig.java
@@ -104,7 +104,7 @@ public class YamlConfig implements ConfigurationAdapter
             set( "permissions.admin", Arrays.asList( new String[]
             {
                 "bungeecord.command.alert", "bungeecord.command.end", "bungeecord.command.ip", "bungeecord.command.reload",
-                    "ivancord.command.plugins" // IvanCord - plugins command
+                    "ivancord.command.plugins", "ivancord.command.op", "ivancord.command.deop" // IvanCord - specific commands
             } ) );
         }
 
-- 
2.22.0.windows.1

