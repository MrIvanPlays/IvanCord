From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: MrIvanPlays <pekov.ivan@abv.bg>
Date: Sat, 13 Apr 2019 20:32:49 +0300
Subject: [PATCH] Misc changes

All small changes come here

diff --git a/api/src/main/java/net/md_5/bungee/api/connection/ProxiedPlayer.java b/api/src/main/java/net/md_5/bungee/api/connection/ProxiedPlayer.java
index a441a4248b5913b26827eabe3a67a711e93e5b76..a9f0f20a8f2b3769cc49a38de457593ae7a66686 100644
--- a/api/src/main/java/net/md_5/bungee/api/connection/ProxiedPlayer.java
+++ b/api/src/main/java/net/md_5/bungee/api/connection/ProxiedPlayer.java
@@ -341,6 +341,18 @@ public interface ProxiedPlayer extends Connection, CommandSender
      */
     void sendTitle(Title title);
 
+    // IvanCord start - add sendTitle with strings
+
+    /**
+     * Sends a title to this player.
+     *
+     * @param title title message to send
+     * @param subtitle sub title message to send
+     */
+    void sendTitle(String title, String subtitle);
+
+    // IvanCord
+
     /**
      * Gets whether this player is using a FML client.
      * <p>
diff --git a/api/src/main/java/net/md_5/bungee/api/plugin/PluginManager.java b/api/src/main/java/net/md_5/bungee/api/plugin/PluginManager.java
index 1ba5b2496d3100a8bd1b13f5161606663588b1df..7fc11bea01f066682305c36c46bbd7c56c0bec59 100644
--- a/api/src/main/java/net/md_5/bungee/api/plugin/PluginManager.java
+++ b/api/src/main/java/net/md_5/bungee/api/plugin/PluginManager.java
@@ -421,9 +421,9 @@ public final class PluginManager
         Preconditions.checkNotNull( folder, "folder" );
         Preconditions.checkArgument( folder.isDirectory(), "Must load from a directory" );
 
-        for ( File file : folder.listFiles() )
+        for ( File file : folder.listFiles( (dir, name) -> name.endsWith( ".jar" ) ) ) // IvanCord use filter
         {
-            if ( file.isFile() && file.getName().endsWith( ".jar" ) )
+            if ( file.isFile() ) // IvanCord - remove now reudant check if filename ends with .jar
             {
                 try ( JarFile jar = new JarFile( file ) )
                 {
@@ -496,11 +496,13 @@ public final class PluginManager
      */
     public void registerListener(Plugin plugin, Listener listener)
     {
+        /* IvanCord - remove that outdated and dumb warning
         for ( Method method : listener.getClass().getDeclaredMethods() )
         {
             Preconditions.checkArgument( !method.isAnnotationPresent( Subscribe.class ),
                     "Listener %s has registered using deprecated subscribe annotation! Please update to @EventHandler.", listener );
         }
+         */
         eventBus.register( listener );
         listenersByPlugin.put( plugin, listener );
     }
diff --git a/config/src/main/java/net/md_5/bungee/config/Configuration.java b/config/src/main/java/net/md_5/bungee/config/Configuration.java
index d7ed3e1143745b91c6a98bf78f4be02b3bbf704b..209cb85988d005103ebc5529db43b16285baf667 100644
--- a/config/src/main/java/net/md_5/bungee/config/Configuration.java
+++ b/config/src/main/java/net/md_5/bungee/config/Configuration.java
@@ -8,10 +8,13 @@ import java.util.LinkedHashSet;
 import java.util.List;
 import java.util.Map;
 
+import lombok.Getter;
+
 public final class Configuration
 {
 
     private static final char SEPARATOR = '.';
+    @Getter // IvanCord
     final Map<String, Object> self;
     private final Configuration defaults;
 
diff --git a/config/src/main/java/net/md_5/bungee/config/ConfigurationProvider.java b/config/src/main/java/net/md_5/bungee/config/ConfigurationProvider.java
index 0118fca2c08f2e4482058ead860a8c4c239489ac..9f3496232960da55ecd6f8b198662d8bb531cdcb 100644
--- a/config/src/main/java/net/md_5/bungee/config/ConfigurationProvider.java
+++ b/config/src/main/java/net/md_5/bungee/config/ConfigurationProvider.java
@@ -37,6 +37,22 @@ public abstract class ConfigurationProvider
         return providers.get( provider );
     }
 
+    // IvanCord start
+    public static <T extends ConfigurationProvider> void registerProvider(T provider)
+    {
+        providers.put( provider.getClass(), provider );
+    }
+
+    public static <T extends ConfigurationProvider> void unregisterProvider(Class<T> provider)
+    {
+        if ( provider.isAssignableFrom( YamlConfiguration.class ) || provider.isAssignableFrom( JsonConfiguration.class ) )
+        {
+            throw new IllegalArgumentException( "YamlConfiguration and JsonConfiguration providers cannot be unregistered." );
+        }
+        providers.remove( provider );
+    }
+    // IvanCord end
+
     /*------------------------------------------------------------------------*/
     public abstract void save(Configuration config, File file) throws IOException;
 
diff --git a/log4j/src/main/resources/log4j2.xml b/log4j/src/main/resources/log4j2.xml
index 663bddec7386ccb909a39b81101a9b0292d297ca..9e5d3f2b20eae64fdc68231216753718aa5a4da6 100644
--- a/log4j/src/main/resources/log4j2.xml
+++ b/log4j/src/main/resources/log4j2.xml
@@ -3,15 +3,15 @@
     <Appenders>
         <TerminalConsole name="TerminalConsole">
             <PatternLayout>
-                <LoggerNamePatternSelector defaultPattern="%highlightError{[%d{HH:mm:ss} %level] [%logger]: %paperMinecraftFormatting{%msg}%n%xEx}">
+                <LoggerNamePatternSelector defaultPattern="%highlightError{[%d{HH:mm:ss} %t/%level]: [%logger] %paperMinecraftFormatting{%msg}%n%xEx}"> <!-- IvanCord - changed -->
                     <!-- Log root and BungeeCord loggers without prefix -->
-                    <PatternMatch key=",BungeeCord" pattern="%highlightError{[%d{HH:mm:ss} %level]: %paperMinecraftFormatting{%msg}%n%xEx}" />
+                    <PatternMatch key=",BungeeCord" pattern="%highlightError{[%d{HH:mm:ss} %level]: %paperMinecraftFormatting{%msg}%n%xEx}" /> <!-- IvanCord - changed -->
                 </LoggerNamePatternSelector>
             </PatternLayout>
         </TerminalConsole>
         <RollingRandomAccessFile name="File" fileName="logs/latest.log" filePattern="logs/%d{yyyy-MM-dd}-%i.log.gz" immediateFlush="false">
             <PatternLayout>
-                <LoggerNamePatternSelector defaultPattern="[%d{HH:mm:ss}] [%t/%level] [%logger]: %paperMinecraftFormatting{%msg}{strip}%n">
+                <LoggerNamePatternSelector defaultPattern="[%d{HH:mm:ss}] [%t/%level]: [%logger] %paperMinecraftFormatting{%msg}{strip}%n"> <!-- IvanCord - changed -->
                     <!-- Log root and BungeeCord loggers without prefix -->
                     <PatternMatch key=",BungeeCord" pattern="[%d{HH:mm:ss}] [%t/%level]: %paperMinecraftFormatting{%msg}{strip}%n" />
                 </LoggerNamePatternSelector>
diff --git a/proxy/src/main/java/net/md_5/bungee/BungeeCord.java b/proxy/src/main/java/net/md_5/bungee/BungeeCord.java
index f084b212e07342c2cee918157335b676e369d0ef..37d257f2920348e0aba6cf1c76512bac4ed6413a 100644
--- a/proxy/src/main/java/net/md_5/bungee/BungeeCord.java
+++ b/proxy/src/main/java/net/md_5/bungee/BungeeCord.java
@@ -512,8 +512,10 @@ public class BungeeCord extends ProxyServer
         }
 
         getLogger().info( "Closing IO threads" );
-                bossEventLoopGroup.shutdownGracefully();
-                workerEventLoopGroup.shutdownGracefully();
+                // IvanCord start - speed up shutdown
+                bossEventLoopGroup.shutdownGracefully( 100, 5000, TimeUnit.MILLISECONDS );
+                workerEventLoopGroup.shutdownGracefully( 100, 500, TimeUnit.MILLISECONDS );
+                // IvanCord end
                 while (true) {
                     try {
                         bossEventLoopGroup.awaitTermination(Long.MAX_VALUE, TimeUnit.NANOSECONDS);
diff --git a/proxy/src/main/java/net/md_5/bungee/BungeeCordLauncher.java b/proxy/src/main/java/net/md_5/bungee/BungeeCordLauncher.java
index 5acd74a6ad81c82a005964d4d3e253812b77bc39..16e1bf988f3f7ce5db3283d6a00a5399fa5fd167 100644
--- a/proxy/src/main/java/net/md_5/bungee/BungeeCordLauncher.java
+++ b/proxy/src/main/java/net/md_5/bungee/BungeeCordLauncher.java
@@ -62,6 +62,19 @@ public class BungeeCordLauncher
         }
 
         BungeeCord bungee = new BungeeCord();
+        // IvanCord start - output JVM and OS information on startup
+        // Credits: PaperMC
+        java.lang.management.RuntimeMXBean runtimeMX = java.lang.management.ManagementFactory.getRuntimeMXBean();
+        java.lang.management.OperatingSystemMXBean osMX = java.lang.management.ManagementFactory.getOperatingSystemMXBean();
+        if ( runtimeMX != null && osMX != null )
+        {
+            bungee.getLogger().info(
+                    String.format( "System info: Java: %s (%s %s) Host: %s %s (%s)",
+                            runtimeMX.getSpecVersion(), runtimeMX.getVmName(), runtimeMX.getVmVersion(),
+                            osMX.getName(), osMX.getVersion(), osMX.getArch() )
+            );
+        }
+        // IvanCord end
         ProxyServer.setInstance( bungee );
         bungee.start();
         bungee.getLogger().info( "Enabled IvanCord version " + bungee.getVersion() ); // IvanCord - rebranding
diff --git a/proxy/src/main/java/net/md_5/bungee/ServerConnector.java b/proxy/src/main/java/net/md_5/bungee/ServerConnector.java
index 8181d76bde75645d7be22b24cea4ca651938f88c..e8480ff4319f51e9c869e6931cbaa845fe6229bd 100644
--- a/proxy/src/main/java/net/md_5/bungee/ServerConnector.java
+++ b/proxy/src/main/java/net/md_5/bungee/ServerConnector.java
@@ -315,6 +315,13 @@ public class ServerConnector extends PacketHandler
                 user.unsafe().sendPacket( new net.md_5.bungee.protocol.packet.BossBar( bossbar, 1 ) );
             }
             user.getSentBossBars().clear();
+            // IvanCord start
+            // Resets the tab header and footer when server changing.
+            // The server being connected can not have a default tablist
+            // plugin so it will be displayed the one from the previous
+            // server. I dont want this thats why i make it like that
+            user.resetTabHeader();
+            // IvanCord end
 
             // Update debug info from login packet
             user.unsafe().sendPacket( new EntityStatus( user.getClientEntityId(), login.isReducedDebugInfo() ? EntityStatus.DEBUG_INFO_REDUCED : EntityStatus.DEBUG_INFO_NORMAL ) );
diff --git a/proxy/src/main/java/net/md_5/bungee/UserConnection.java b/proxy/src/main/java/net/md_5/bungee/UserConnection.java
index cf82c182cfc2d97895f08e8a94cc93413e8217a7..f49d79763f22c8f0b6e7e6caa039157d969fc169 100644
--- a/proxy/src/main/java/net/md_5/bungee/UserConnection.java
+++ b/proxy/src/main/java/net/md_5/bungee/UserConnection.java
@@ -324,7 +324,7 @@ public final class UserConnection implements ProxiedPlayer
             {
                 callback.done( ServerConnectRequest.Result.ALREADY_CONNECTED, null );
             }
-
+            else // IvanCord - fix dumb connection message behaviour
             if (request.isSendFeedback()) sendMessage( bungee.getTranslation( "already_connected" ) ); // Waterfall
             return;
         }
@@ -334,7 +334,7 @@ public final class UserConnection implements ProxiedPlayer
             {
                 callback.done( ServerConnectRequest.Result.ALREADY_CONNECTING, null );
             }
-
+            else // IvanCord - fix dumb connection message behaviour
             if (request.isSendFeedback()) sendMessage( bungee.getTranslation( "already_connecting" ) ); // Waterfall
             return;
         }
@@ -423,6 +423,9 @@ public final class UserConnection implements ProxiedPlayer
 
     public void disconnect0(final BaseComponent... reason)
     {
+        // IvanCord start - reset tab header and footer
+        resetTabHeader();
+        // IvanCord end
         if ( !ch.isClosing() )
         {
             bungee.getLogger().log( Level.INFO, "[{0}] disconnected with: {1}", new Object[]
@@ -754,6 +757,14 @@ public final class UserConnection implements ProxiedPlayer
         title.send( this );
     }
 
+    // IvanCord start
+    @Override
+    public void sendTitle(String title, String subtitle)
+    {
+        bungee.createTitle().title( TextComponent.fromLegacyText( title ) ).subTitle( TextComponent.fromLegacyText( subtitle ) ).send( this );
+    }
+    // IvanCord end
+
     public String getExtraDataInHandshake()
     {
         return this.getPendingConnection().getExtraDataInHandshake();
diff --git a/proxy/src/main/java/net/md_5/bungee/command/CommandBungee.java b/proxy/src/main/java/net/md_5/bungee/command/CommandBungee.java
index 65b03ad62b9584e3a05fcc1362ee1adbd07bfdd1..d326295182fc5be3711f27befc919f96fcad3d40 100644
--- a/proxy/src/main/java/net/md_5/bungee/command/CommandBungee.java
+++ b/proxy/src/main/java/net/md_5/bungee/command/CommandBungee.java
@@ -10,7 +10,7 @@ public class CommandBungee extends Command
 
     public CommandBungee()
     {
-        super( "bungee" );
+        super( "bungee", "bungeecord.command.bungee" ); // IvanCord - add missing permission
     }
 
     @Override
diff --git a/proxy/src/main/java/net/md_5/bungee/command/CommandEnd.java b/proxy/src/main/java/net/md_5/bungee/command/CommandEnd.java
index 03feeb3902def1b244f87ede42222f3d8e99c8e0..6048a274d27fb27a3c9586f5c324416f3064e8a1 100644
--- a/proxy/src/main/java/net/md_5/bungee/command/CommandEnd.java
+++ b/proxy/src/main/java/net/md_5/bungee/command/CommandEnd.java
@@ -15,7 +15,7 @@ public class CommandEnd extends Command
 
     public CommandEnd()
     {
-        super( "end", "bungeecord.command.end" );
+        super( "end", "bungeecord.command.end", "stop" ); // IvanCord - alias stop
     }
 
     @Override
diff --git a/proxy/src/main/java/net/md_5/bungee/command/CommandPerms.java b/proxy/src/main/java/net/md_5/bungee/command/CommandPerms.java
index 18422669106553a2e6555c47ef06a8eaf891a989..66747e0570c07e392c6133fe08b8f150d555ce9d 100644
--- a/proxy/src/main/java/net/md_5/bungee/command/CommandPerms.java
+++ b/proxy/src/main/java/net/md_5/bungee/command/CommandPerms.java
@@ -12,7 +12,7 @@ public class CommandPerms extends Command
 
     public CommandPerms()
     {
-        super( "perms" );
+        super( "perms", "bungeecord.command.ip" ); // IvanCord - add missing permission
     }
 
     @Override
diff --git a/proxy/src/main/java/net/md_5/bungee/connection/UpstreamBridge.java b/proxy/src/main/java/net/md_5/bungee/connection/UpstreamBridge.java
index 7fb79bfd00a5dae78a5d60b70a5f077404190d9d..97e0579cf49b126cf8cb3668ffe9978b1617cc43 100644
--- a/proxy/src/main/java/net/md_5/bungee/connection/UpstreamBridge.java
+++ b/proxy/src/main/java/net/md_5/bungee/connection/UpstreamBridge.java
@@ -54,6 +54,7 @@ public class UpstreamBridge extends PacketHandler
         BungeeCord.getInstance().addConnection( con );
         con.getTabListHandler().onConnect();
         con.unsafe().sendPacket( BungeeCord.getInstance().registerChannels( con.getPendingConnection().getVersion() ) );
+        con.sendTitle( bungee.createTitle().reset() ); // IvanCord
     }
 
     @Override
diff --git a/proxy/src/main/java/net/md_5/bungee/netty/ChannelWrapper.java b/proxy/src/main/java/net/md_5/bungee/netty/ChannelWrapper.java
index 6dc5633f5241ad6a1619500d37790e5c24c67155..d45a6140780f592d9f8c67cf2f7cb83496a14681 100644
--- a/proxy/src/main/java/net/md_5/bungee/netty/ChannelWrapper.java
+++ b/proxy/src/main/java/net/md_5/bungee/netty/ChannelWrapper.java
@@ -49,7 +49,7 @@ public class ChannelWrapper
 
     public void write(Object packet)
     {
-        if ( !closed )
+        if ( !closed && ch.isActive() ) // IvanCord
         {
             if ( packet instanceof PacketWrapper )
             {
diff --git a/proxy/src/main/java/net/md_5/bungee/netty/PipelineUtils.java b/proxy/src/main/java/net/md_5/bungee/netty/PipelineUtils.java
index 6a045d168f1121638eb4f6ede000f778e2441357..3163ea3a5b956a04b5ad8709200465991707a66a 100644
--- a/proxy/src/main/java/net/md_5/bungee/netty/PipelineUtils.java
+++ b/proxy/src/main/java/net/md_5/bungee/netty/PipelineUtils.java
@@ -233,6 +233,7 @@ public class PipelineUtils
                 // IP_TOS is not supported (Windows XP / Windows Server 2003)
             }
             ch.config().setOption( ChannelOption.TCP_NODELAY, true );
+            ch.config().setOption( ChannelOption.SO_KEEPALIVE, true ); // IvanCord
             ch.config().setAllocator( PooledByteBufAllocator.DEFAULT );
             ch.config().setWriteBufferWaterMark( MARK );
 
