From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: MrIvanPlays <pekov.ivan@abv.bg>
Date: Sat, 13 Apr 2019 20:32:49 +0300
Subject: [PATCH] Misc changes

All small changes come here

diff --git a/api/src/main/java/net/md_5/bungee/api/AbstractReconnectHandler.java b/api/src/main/java/net/md_5/bungee/api/AbstractReconnectHandler.java
index 2adcd5739b6af4e32389f69273386cb3cb861c66..b99fb0e074424ba128d468c0646a516dc2823628 100644
--- a/api/src/main/java/net/md_5/bungee/api/AbstractReconnectHandler.java
+++ b/api/src/main/java/net/md_5/bungee/api/AbstractReconnectHandler.java
@@ -35,10 +35,22 @@ public abstract class AbstractReconnectHandler implements ReconnectHandler
 
         String forced = con.getListener().getForcedHosts().get( con.getVirtualHost().getHostString() );
 
+        // IvanCord start - rewrite this
+        /*
         if ( forced == null && con.getListener().isForceDefault() )
         {
             forced = con.getListener().getDefaultServer();
         }
+         */
+        if ( con.getListener().isForceDefault() )
+        {
+            forced = con.getListener().getDefaultServer();
+        }
+        if ( forced == null )
+        {
+            forced = con.getListener().getDefaultServer();
+        }
+        // IvanCord end
         return ProxyServer.getInstance().getServerInfo( forced );
     }
 
diff --git a/api/src/main/java/net/md_5/bungee/api/connection/ProxiedPlayer.java b/api/src/main/java/net/md_5/bungee/api/connection/ProxiedPlayer.java
index 684eb8831ebe2d000411257ee80906132566bcaf..22a73d471f251b119d1eb3ed3abfd975f13960b0 100644
--- a/api/src/main/java/net/md_5/bungee/api/connection/ProxiedPlayer.java
+++ b/api/src/main/java/net/md_5/bungee/api/connection/ProxiedPlayer.java
@@ -341,6 +341,18 @@ public interface ProxiedPlayer extends Connection, CommandSender
      */
     void sendTitle(Title title);
 
+    // IvanCord start - add sendTitle with strings
+
+    /**
+     * Sends a title to this player.
+     *
+     * @param title title message to send
+     * @param subtitle sub title message to send
+     */
+    void sendTitle(String title, String subtitle);
+
+    // IvanCord
+
     /**
      * Gets whether this player is using a FML client.
      * <p>
diff --git a/api/src/main/java/net/md_5/bungee/api/plugin/PluginManager.java b/api/src/main/java/net/md_5/bungee/api/plugin/PluginManager.java
index 90031156f29f83bf73d8c93152ca91298f40a89c..b60c0960dae4a32eb942a5f4d0c66ea1d0d7bb0f 100644
--- a/api/src/main/java/net/md_5/bungee/api/plugin/PluginManager.java
+++ b/api/src/main/java/net/md_5/bungee/api/plugin/PluginManager.java
@@ -420,9 +420,9 @@ public final class PluginManager
         Preconditions.checkNotNull( folder, "folder" );
         Preconditions.checkArgument( folder.isDirectory(), "Must load from a directory" );
 
-        for ( File file : folder.listFiles() )
+        for ( File file : folder.listFiles( (dir, name) -> name.endsWith( ".jar" ) ) ) // IvanCord use filter
         {
-            if ( file.isFile() && file.getName().endsWith( ".jar" ) )
+            if ( file.isFile() ) // IvanCord - remove now reudant check if filename ends with .jar
             {
                 try ( JarFile jar = new JarFile( file ) )
                 {
@@ -495,11 +495,13 @@ public final class PluginManager
      */
     public void registerListener(Plugin plugin, Listener listener)
     {
+        /* IvanCord - remove that outdated and dumb warning
         for ( Method method : listener.getClass().getDeclaredMethods() )
         {
             Preconditions.checkArgument( !method.isAnnotationPresent( Subscribe.class ),
                     "Listener %s has registered using deprecated subscribe annotation! Please update to @EventHandler.", listener );
         }
+         */
         eventBus.register( listener );
         listenersByPlugin.put( plugin, listener );
     }
diff --git a/config/src/main/java/net/md_5/bungee/config/Configuration.java b/config/src/main/java/net/md_5/bungee/config/Configuration.java
index d7ed3e1143745b91c6a98bf78f4be02b3bbf704b..209cb85988d005103ebc5529db43b16285baf667 100644
--- a/config/src/main/java/net/md_5/bungee/config/Configuration.java
+++ b/config/src/main/java/net/md_5/bungee/config/Configuration.java
@@ -8,10 +8,13 @@ import java.util.LinkedHashSet;
 import java.util.List;
 import java.util.Map;
 
+import lombok.Getter;
+
 public final class Configuration
 {
 
     private static final char SEPARATOR = '.';
+    @Getter // IvanCord
     final Map<String, Object> self;
     private final Configuration defaults;
 
diff --git a/config/src/main/java/net/md_5/bungee/config/ConfigurationProvider.java b/config/src/main/java/net/md_5/bungee/config/ConfigurationProvider.java
index 0118fca2c08f2e4482058ead860a8c4c239489ac..9f3496232960da55ecd6f8b198662d8bb531cdcb 100644
--- a/config/src/main/java/net/md_5/bungee/config/ConfigurationProvider.java
+++ b/config/src/main/java/net/md_5/bungee/config/ConfigurationProvider.java
@@ -37,6 +37,22 @@ public abstract class ConfigurationProvider
         return providers.get( provider );
     }
 
+    // IvanCord start
+    public static <T extends ConfigurationProvider> void registerProvider(T provider)
+    {
+        providers.put( provider.getClass(), provider );
+    }
+
+    public static <T extends ConfigurationProvider> void unregisterProvider(Class<T> provider)
+    {
+        if ( provider.isAssignableFrom( YamlConfiguration.class ) || provider.isAssignableFrom( JsonConfiguration.class ) )
+        {
+            throw new IllegalArgumentException( "YamlConfiguration and JsonConfiguration providers cannot be unregistered." );
+        }
+        providers.remove( provider );
+    }
+    // IvanCord end
+
     /*------------------------------------------------------------------------*/
     public abstract void save(Configuration config, File file) throws IOException;
 
diff --git a/log4j/src/main/resources/log4j2.xml b/log4j/src/main/resources/log4j2.xml
index a42d63fa881628e4bb3f6ceae8c9676e9e614b47..e0c37b1ec429db823401a7e8ce338c0ce51520d4 100644
--- a/log4j/src/main/resources/log4j2.xml
+++ b/log4j/src/main/resources/log4j2.xml
@@ -3,15 +3,15 @@
     <Appenders>
         <TerminalConsole name="TerminalConsole">
             <PatternLayout>
-                <LoggerNamePatternSelector defaultPattern="%highlightError{[%d{HH:mm:ss} %level] [%logger]: %paperMinecraftFormatting{%msg}%n%xEx}">
+                <LoggerNamePatternSelector defaultPattern="%highlightError{[%d{HH:mm:ss} %t/%level]: [%logger] %paperMinecraftFormatting{%msg}%n%xEx}"> <!-- IvanCord - changed -->
                     <!-- Log root and BungeeCord loggers without prefix -->
-                    <PatternMatch key=",BungeeCord" pattern="%highlightError{[%d{HH:mm:ss} %level]: %paperMinecraftFormatting{%msg}%n%xEx}" />
+                    <PatternMatch key=",BungeeCord" pattern="%highlightError{[%d{HH:mm:ss} %level]: %paperMinecraftFormatting{%msg}%n%xEx}" /> <!-- IvanCord - changed -->
                 </LoggerNamePatternSelector>
             </PatternLayout>
         </TerminalConsole>
         <RollingRandomAccessFile name="File" fileName="logs/latest.log" filePattern="logs/%d{yyyy-MM-dd}-%i.log.gz" immediateFlush="false">
             <PatternLayout>
-                <LoggerNamePatternSelector defaultPattern="[%d{HH:mm:ss}] [%t/%level] [%logger]: %paperMinecraftFormatting{%msg}{strip}%n">
+                <LoggerNamePatternSelector defaultPattern="[%d{HH:mm:ss}] [%t/%level]: [%logger] %paperMinecraftFormatting{%msg}{strip}%n"> <!-- IvanCord - changed -->
                     <!-- Log root and BungeeCord loggers without prefix -->
                     <PatternMatch key=",BungeeCord" pattern="[%d{HH:mm:ss}] [%t/%level]: %paperMinecraftFormatting{%msg}{strip}%n" />
                 </LoggerNamePatternSelector>
diff --git a/protocol/src/main/java/net/md_5/bungee/protocol/ProtocolConstants.java b/protocol/src/main/java/net/md_5/bungee/protocol/ProtocolConstants.java
index bb37ba04fbc920e515251a4482f78a10993fcbab..2ecd16fb58415e6448cc4a5173a5abca5ce7e7b6 100644
--- a/protocol/src/main/java/net/md_5/bungee/protocol/ProtocolConstants.java
+++ b/protocol/src/main/java/net/md_5/bungee/protocol/ProtocolConstants.java
@@ -36,7 +36,7 @@ public class ProtocolConstants
     public static final int MINECRAFT_1_16_4 = 754;
     public static final int MINECRAFT_1_17 = 755;
     public static final int MINECRAFT_1_17_1 = 756;
-    public static final int MINECRAFT_1_18 = 1073741868;
+    public static final int MINECRAFT_1_18 = ( 1 << 30 ) | 46; // IvanCord - 21w42a, future protocol: 757
     public static final List<String> SUPPORTED_VERSIONS;
     public static final List<Integer> SUPPORTED_VERSION_IDS;
 
diff --git a/proxy/src/main/java/net/md_5/bungee/BungeeCord.java b/proxy/src/main/java/net/md_5/bungee/BungeeCord.java
index 6248e7dd2d9c49ae24d35093d30690ddb8260bbf..e41fff8a7dce59d0ea007abe1ba07de59a157f06 100644
--- a/proxy/src/main/java/net/md_5/bungee/BungeeCord.java
+++ b/proxy/src/main/java/net/md_5/bungee/BungeeCord.java
@@ -511,8 +511,10 @@ public class BungeeCord extends ProxyServer
         }
 
         getLogger().info( "Closing IO threads" );
-                bossEventLoopGroup.shutdownGracefully();
-                workerEventLoopGroup.shutdownGracefully();
+                // IvanCord start - speed up shutdown
+                bossEventLoopGroup.shutdownGracefully( 100, 5000, TimeUnit.MILLISECONDS );
+                workerEventLoopGroup.shutdownGracefully( 100, 500, TimeUnit.MILLISECONDS );
+                // IvanCord end
                 while (true) {
                     try {
                         bossEventLoopGroup.awaitTermination(Long.MAX_VALUE, TimeUnit.NANOSECONDS);
diff --git a/proxy/src/main/java/net/md_5/bungee/BungeeCordLauncher.java b/proxy/src/main/java/net/md_5/bungee/BungeeCordLauncher.java
index 074fefc87a22fb4495dac9a2bb7e4a7c4d8fe6b5..fdf32d89fdde0c2eb76a8d928e51c9ae71945e49 100644
--- a/proxy/src/main/java/net/md_5/bungee/BungeeCordLauncher.java
+++ b/proxy/src/main/java/net/md_5/bungee/BungeeCordLauncher.java
@@ -62,6 +62,19 @@ public class BungeeCordLauncher
         }
 
         BungeeCord bungee = new BungeeCord();
+        // IvanCord start - output JVM and OS information on startup
+        // Credits: PaperMC
+        java.lang.management.RuntimeMXBean runtimeMX = java.lang.management.ManagementFactory.getRuntimeMXBean();
+        java.lang.management.OperatingSystemMXBean osMX = java.lang.management.ManagementFactory.getOperatingSystemMXBean();
+        if ( runtimeMX != null && osMX != null )
+        {
+            bungee.getLogger().info(
+                    String.format( "System info: Java: %s (%s %s) Host: %s %s (%s)",
+                            runtimeMX.getSpecVersion(), runtimeMX.getVmName(), runtimeMX.getVmVersion(),
+                            osMX.getName(), osMX.getVersion(), osMX.getArch() )
+            );
+        }
+        // IvanCord end
         ProxyServer.setInstance( bungee );
         bungee.start();
         bungee.getLogger().info( "Enabled IvanCord version " + bungee.getVersion() ); // IvanCord - rebranding
diff --git a/proxy/src/main/java/net/md_5/bungee/ServerConnector.java b/proxy/src/main/java/net/md_5/bungee/ServerConnector.java
index 134d4356f6c6a2e2c3ff74c09b2be43a9a2ed85f..8827645a2d70692c2ce280aba5765e7689a5e6b3 100644
--- a/proxy/src/main/java/net/md_5/bungee/ServerConnector.java
+++ b/proxy/src/main/java/net/md_5/bungee/ServerConnector.java
@@ -306,6 +306,13 @@ public class ServerConnector extends PacketHandler
                 user.unsafe().sendPacket( new net.md_5.bungee.protocol.packet.BossBar( bossbar, 1 ) );
             }
             user.getSentBossBars().clear();
+            // IvanCord start
+            // Resets the tab header and footer when server changing.
+            // The server being connected can not have a default tablist
+            // plugin so it will be displayed the one from the previous
+            // server. I dont want this thats why i make it like that
+            user.resetTabHeader();
+            // IvanCord end
 
             // Update debug info from login packet
             user.unsafe().sendPacket( new EntityStatus( user.getClientEntityId(), login.isReducedDebugInfo() ? EntityStatus.DEBUG_INFO_REDUCED : EntityStatus.DEBUG_INFO_NORMAL ) );
diff --git a/proxy/src/main/java/net/md_5/bungee/UserConnection.java b/proxy/src/main/java/net/md_5/bungee/UserConnection.java
index fc98b4b19110ca5a45cfe473c2491504c0e40cde..aa7056dc3060fe7b70f3ffe28965522683b2f218 100644
--- a/proxy/src/main/java/net/md_5/bungee/UserConnection.java
+++ b/proxy/src/main/java/net/md_5/bungee/UserConnection.java
@@ -323,7 +323,7 @@ public final class UserConnection implements ProxiedPlayer
             {
                 callback.done( ServerConnectRequest.Result.ALREADY_CONNECTED, null );
             }
-
+            else // IvanCord - fix dumb connection message behaviour
             sendMessage( bungee.getTranslation( "already_connected" ) );
             return;
         }
@@ -333,7 +333,7 @@ public final class UserConnection implements ProxiedPlayer
             {
                 callback.done( ServerConnectRequest.Result.ALREADY_CONNECTING, null );
             }
-
+            else // IvanCord - fix dumb connection message behaviour
             sendMessage( bungee.getTranslation( "already_connecting" ) );
             return;
         }
@@ -427,6 +427,9 @@ public final class UserConnection implements ProxiedPlayer
 
     public void disconnect0(final BaseComponent... reason)
     {
+        // IvanCord start - reset tab header and footer
+        resetTabHeader();
+        // IvanCord end
         if ( !ch.isClosing() )
         {
             bungee.getLogger().log( Level.INFO, "[{0}] disconnected with: {1}", new Object[]
@@ -742,6 +745,14 @@ public final class UserConnection implements ProxiedPlayer
         title.send( this );
     }
 
+    // IvanCord start
+    @Override
+    public void sendTitle(String title, String subtitle)
+    {
+        bungee.createTitle().title( TextComponent.fromLegacyText( title ) ).subTitle( TextComponent.fromLegacyText( subtitle ) ).send( this );
+    }
+    // IvanCord end
+
     public String getExtraDataInHandshake()
     {
         return this.getPendingConnection().getExtraDataInHandshake();
diff --git a/proxy/src/main/java/net/md_5/bungee/command/CommandBungee.java b/proxy/src/main/java/net/md_5/bungee/command/CommandBungee.java
index 65b03ad62b9584e3a05fcc1362ee1adbd07bfdd1..d326295182fc5be3711f27befc919f96fcad3d40 100644
--- a/proxy/src/main/java/net/md_5/bungee/command/CommandBungee.java
+++ b/proxy/src/main/java/net/md_5/bungee/command/CommandBungee.java
@@ -10,7 +10,7 @@ public class CommandBungee extends Command
 
     public CommandBungee()
     {
-        super( "bungee" );
+        super( "bungee", "bungeecord.command.bungee" ); // IvanCord - add missing permission
     }
 
     @Override
diff --git a/proxy/src/main/java/net/md_5/bungee/command/CommandEnd.java b/proxy/src/main/java/net/md_5/bungee/command/CommandEnd.java
index 03feeb3902def1b244f87ede42222f3d8e99c8e0..6048a274d27fb27a3c9586f5c324416f3064e8a1 100644
--- a/proxy/src/main/java/net/md_5/bungee/command/CommandEnd.java
+++ b/proxy/src/main/java/net/md_5/bungee/command/CommandEnd.java
@@ -15,7 +15,7 @@ public class CommandEnd extends Command
 
     public CommandEnd()
     {
-        super( "end", "bungeecord.command.end" );
+        super( "end", "bungeecord.command.end", "stop" ); // IvanCord - alias stop
     }
 
     @Override
diff --git a/proxy/src/main/java/net/md_5/bungee/command/CommandPerms.java b/proxy/src/main/java/net/md_5/bungee/command/CommandPerms.java
index 18422669106553a2e6555c47ef06a8eaf891a989..66747e0570c07e392c6133fe08b8f150d555ce9d 100644
--- a/proxy/src/main/java/net/md_5/bungee/command/CommandPerms.java
+++ b/proxy/src/main/java/net/md_5/bungee/command/CommandPerms.java
@@ -12,7 +12,7 @@ public class CommandPerms extends Command
 
     public CommandPerms()
     {
-        super( "perms" );
+        super( "perms", "bungeecord.command.ip" ); // IvanCord - add missing permission
     }
 
     @Override
diff --git a/proxy/src/main/java/net/md_5/bungee/connection/InitialHandler.java b/proxy/src/main/java/net/md_5/bungee/connection/InitialHandler.java
index 0fd58e83a47b46e218d6bf49e4f5f27e6761a77a..99ab3453d2bb828669afe6947b3a5e015c7b4470 100644
--- a/proxy/src/main/java/net/md_5/bungee/connection/InitialHandler.java
+++ b/proxy/src/main/java/net/md_5/bungee/connection/InitialHandler.java
@@ -193,6 +193,18 @@ public class InitialHandler extends PacketHandler implements PendingConnection
                 }
 
                 ServerPing legacy = result.getResponse();
+                // IvanCord start - handle null legacy.getPlayers()
+                // such behavior is handled by modern pinging, yet it is not for
+                // legacy pinging. This causes A NPE whenever a < 1.7 MC client
+                // pings the proxy ( for whatever reason someone is using such a
+                // version )
+                if ( legacy.getPlayers() == null )
+                {
+                    // see https://github.com/SpigotMC/BungeeCord/issues/3192#issuecomment-966553225
+                    // as the reason why we set max and online to -1
+                    legacy.setPlayers( new ServerPing.Players( -1, -1, null ) );
+                }
+                // IvanCord end
                 String kickMessage;
 
                 if ( v1_5 )
diff --git a/proxy/src/main/java/net/md_5/bungee/netty/ChannelWrapper.java b/proxy/src/main/java/net/md_5/bungee/netty/ChannelWrapper.java
index 6dc5633f5241ad6a1619500d37790e5c24c67155..d45a6140780f592d9f8c67cf2f7cb83496a14681 100644
--- a/proxy/src/main/java/net/md_5/bungee/netty/ChannelWrapper.java
+++ b/proxy/src/main/java/net/md_5/bungee/netty/ChannelWrapper.java
@@ -49,7 +49,7 @@ public class ChannelWrapper
 
     public void write(Object packet)
     {
-        if ( !closed )
+        if ( !closed && ch.isActive() ) // IvanCord
         {
             if ( packet instanceof PacketWrapper )
             {
diff --git a/proxy/src/main/java/net/md_5/bungee/netty/PipelineUtils.java b/proxy/src/main/java/net/md_5/bungee/netty/PipelineUtils.java
index 96704d5ebfe4bb8f4448e758b3961761e427c86f..c63f650ffac86b1a8d87206099d7c6e9cea7dbad 100644
--- a/proxy/src/main/java/net/md_5/bungee/netty/PipelineUtils.java
+++ b/proxy/src/main/java/net/md_5/bungee/netty/PipelineUtils.java
@@ -187,6 +187,7 @@ public class PipelineUtils
                 // IP_TOS is not supported (Windows XP / Windows Server 2003)
             }
             ch.config().setOption( ChannelOption.TCP_NODELAY, true );
+            ch.config().setOption( ChannelOption.SO_KEEPALIVE, true ); // IvanCord
             ch.config().setAllocator( PooledByteBufAllocator.DEFAULT );
             ch.config().setWriteBufferWaterMark( MARK );
 
