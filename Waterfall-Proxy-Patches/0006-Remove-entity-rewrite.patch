From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: MrIvanPlays <pekov.ivan@abv.bg>
Date: Sun, 28 Apr 2019 09:53:09 +0300
Subject: [PATCH] Remove entity rewrite

This patch gets rid of the entity rewrite, ignoring the disable entity
metadata rewrite thing in Waterfall. It just gets rid of it.
All score and team packets are not handled by the proxy in no way. They
dont either register!

diff --git a/api/src/main/java/net/md_5/bungee/api/connection/ProxiedPlayer.java b/api/src/main/java/net/md_5/bungee/api/connection/ProxiedPlayer.java
index a9f0f20a8f2b3769cc49a38de457593ae7a66686..bee575a7741726c9493f8ec8c65f98ee1083eb0a 100644
--- a/api/src/main/java/net/md_5/bungee/api/connection/ProxiedPlayer.java
+++ b/api/src/main/java/net/md_5/bungee/api/connection/ProxiedPlayer.java
@@ -397,6 +397,8 @@ public interface ProxiedPlayer extends Connection, CommandSender
      * Get the {@link Scoreboard} that belongs to this player.
      *
      * @return this player's {@link Scoreboard}
+     * @deprecated not handled anymore
      */
+    @Deprecated // IvanCord
     Scoreboard getScoreboard();
 }
diff --git a/api/src/main/java/net/md_5/bungee/api/score/Objective.java b/api/src/main/java/net/md_5/bungee/api/score/Objective.java
index 0dd256467c596d32dc08f4166b6949a77638d7ef..1e77f861efe3f959d3794f8188008da6deea82fe 100644
--- a/api/src/main/java/net/md_5/bungee/api/score/Objective.java
+++ b/api/src/main/java/net/md_5/bungee/api/score/Objective.java
@@ -5,9 +5,12 @@ import lombok.Data;
 
 /**
  * Represents an objective entry.
+ *
+ * @deprecated not handled anymore
  */
 @Data
 @AllArgsConstructor
+@Deprecated // IvanCord
 public class Objective
 {
 
diff --git a/api/src/main/java/net/md_5/bungee/api/score/Position.java b/api/src/main/java/net/md_5/bungee/api/score/Position.java
index c3da93b2287004edd4169af60cc384b1b38652a6..2f6505d9cf46473e4afb8850b23cad6f45f45293 100644
--- a/api/src/main/java/net/md_5/bungee/api/score/Position.java
+++ b/api/src/main/java/net/md_5/bungee/api/score/Position.java
@@ -2,7 +2,10 @@ package net.md_5.bungee.api.score;
 
 /**
  * Represents locations for a scoreboard to be displayed.
+ *
+ * @deprecated not handled anymore
  */
+@Deprecated // IvanCord
 public enum Position
 {
 
diff --git a/api/src/main/java/net/md_5/bungee/api/score/Score.java b/api/src/main/java/net/md_5/bungee/api/score/Score.java
index cb906ddd034ee61e6963c90c86a0c573ebaa6f22..3020fc74a7970043f96f7d8c15fbcfcc6f8d6c73 100644
--- a/api/src/main/java/net/md_5/bungee/api/score/Score.java
+++ b/api/src/main/java/net/md_5/bungee/api/score/Score.java
@@ -4,8 +4,11 @@ import lombok.Data;
 
 /**
  * Represents a scoreboard score entry.
+ *
+ * @deprecated not handled anymore
  */
 @Data
+@Deprecated // IvanCord
 public class Score
 {
 
diff --git a/api/src/main/java/net/md_5/bungee/api/score/Scoreboard.java b/api/src/main/java/net/md_5/bungee/api/score/Scoreboard.java
index c10c7b11e0142c781b445f6a4f422ee7c2ae688d..eb1e8a8892c9c241be451b53bc4dbb17080f51a4 100644
--- a/api/src/main/java/net/md_5/bungee/api/score/Scoreboard.java
+++ b/api/src/main/java/net/md_5/bungee/api/score/Scoreboard.java
@@ -8,8 +8,12 @@ import java.util.Map;
 import lombok.Data;
 import lombok.NoArgsConstructor;
 
+/**
+ * @deprecated not handled anymore
+ */
 @Data
 @NoArgsConstructor
+@Deprecated // IvanCord
 public class Scoreboard
 {
 
diff --git a/api/src/main/java/net/md_5/bungee/api/score/Team.java b/api/src/main/java/net/md_5/bungee/api/score/Team.java
index 849ba1cf93a234f71b363073904efa52ca6d7ce5..d4d7323a084ccae0444c428a266ead503a199e32 100644
--- a/api/src/main/java/net/md_5/bungee/api/score/Team.java
+++ b/api/src/main/java/net/md_5/bungee/api/score/Team.java
@@ -7,7 +7,11 @@ import java.util.Set;
 import lombok.Data;
 import lombok.NonNull;
 
+/**
+ * @deprecated not handled anymore
+ */
 @Data
+@Deprecated // IvanCord
 public class Team
 {
 
diff --git a/protocol/src/main/java/net/md_5/bungee/protocol/Protocol.java b/protocol/src/main/java/net/md_5/bungee/protocol/Protocol.java
index 8bf14d561362599cf77593e25fee7b35a07cfd0a..41151deb189db4b7fe7a378cc4370a3479f11a96 100644
--- a/protocol/src/main/java/net/md_5/bungee/protocol/Protocol.java
+++ b/protocol/src/main/java/net/md_5/bungee/protocol/Protocol.java
@@ -144,6 +144,8 @@ public enum Protocol
                     map( ProtocolConstants.MINECRAFT_1_19, 0x0A ),
                     map( ProtocolConstants.MINECRAFT_1_19_4, 0xB )
             );
+            // IvanCord start - stop this from registering
+            /*
             // Waterfall start
             TO_CLIENT.registerPacket(
                     EntityEffect.class,
@@ -158,6 +160,7 @@ public enum Protocol
                     map(ProtocolConstants.MINECRAFT_1_9, -1)
             );
             // Waterfall end
+            */ // IvanCord end
             TO_CLIENT.registerPacket(
                     PlayerListItem.class, // PlayerInfo
                     PlayerListItem::new,
@@ -188,6 +191,8 @@ public enum Protocol
                     map( ProtocolConstants.MINECRAFT_1_19_3, 0x0D ),
                     map( ProtocolConstants.MINECRAFT_1_19_4, 0xF )
             );
+            // IvanCord start - remove these from handling
+            /*
             TO_CLIENT.registerPacket(
                     ScoreboardObjective.class,
                     ScoreboardObjective::new,
@@ -248,6 +253,8 @@ public enum Protocol
                     map( ProtocolConstants.MINECRAFT_1_19_3, 0x56 ),
                     map( ProtocolConstants.MINECRAFT_1_19_4, 0x5A )
             );
+             */
+            // IvanCord end
             TO_CLIENT.registerPacket(
                     PluginMessage.class,
                     PluginMessage::new,
diff --git a/protocol/src/main/java/net/md_5/bungee/protocol/packet/EntityEffect.java b/protocol/src/main/java/net/md_5/bungee/protocol/packet/EntityEffect.java
index d11a9ea9d663993e3af2c6250565af4b019a2dda..3b0c6f3da323cd6b8af028f01798126f7304936a 100644
--- a/protocol/src/main/java/net/md_5/bungee/protocol/packet/EntityEffect.java
+++ b/protocol/src/main/java/net/md_5/bungee/protocol/packet/EntityEffect.java
@@ -12,6 +12,7 @@ import net.md_5.bungee.protocol.DefinedPacket;
 @NoArgsConstructor
 @AllArgsConstructor
 @EqualsAndHashCode(callSuper = false)
+@Deprecated // IvanCord
 public class EntityEffect extends DefinedPacket {
 
     private int entityId;
diff --git a/protocol/src/main/java/net/md_5/bungee/protocol/packet/EntityRemoveEffect.java b/protocol/src/main/java/net/md_5/bungee/protocol/packet/EntityRemoveEffect.java
index 7ed2dc3abbc53d7cb4c893e2fdc4bc3a01017c05..255a91aa0aae42f2a1868f9a30b7f530659ee2a2 100644
--- a/protocol/src/main/java/net/md_5/bungee/protocol/packet/EntityRemoveEffect.java
+++ b/protocol/src/main/java/net/md_5/bungee/protocol/packet/EntityRemoveEffect.java
@@ -12,6 +12,7 @@ import net.md_5.bungee.protocol.DefinedPacket;
 @NoArgsConstructor
 @AllArgsConstructor
 @EqualsAndHashCode(callSuper = false)
+@Deprecated // IvanCord
 public class EntityRemoveEffect extends DefinedPacket {
 
     private int entityId;
diff --git a/protocol/src/main/java/net/md_5/bungee/protocol/packet/ScoreboardDisplay.java b/protocol/src/main/java/net/md_5/bungee/protocol/packet/ScoreboardDisplay.java
index b8f30276df6d3373f4ab0a4a31ff37634213d7d8..578095d50125fc804e163dc19f2222d0b085ca1a 100644
--- a/protocol/src/main/java/net/md_5/bungee/protocol/packet/ScoreboardDisplay.java
+++ b/protocol/src/main/java/net/md_5/bungee/protocol/packet/ScoreboardDisplay.java
@@ -8,10 +8,14 @@ import lombok.NoArgsConstructor;
 import net.md_5.bungee.protocol.AbstractPacketHandler;
 import net.md_5.bungee.protocol.DefinedPacket;
 
+/**
+ * @deprecated not handled anymore
+ */
 @Data
 @NoArgsConstructor
 @AllArgsConstructor
 @EqualsAndHashCode(callSuper = false)
+@Deprecated // IvanCord
 public class ScoreboardDisplay extends DefinedPacket
 {
 
diff --git a/protocol/src/main/java/net/md_5/bungee/protocol/packet/ScoreboardObjective.java b/protocol/src/main/java/net/md_5/bungee/protocol/packet/ScoreboardObjective.java
index 3c7905d544f2efc2a04831779584a81fa0afed03..6fa90c03fdcb70d14f0bdfaefe9a32f620e1f44b 100644
--- a/protocol/src/main/java/net/md_5/bungee/protocol/packet/ScoreboardObjective.java
+++ b/protocol/src/main/java/net/md_5/bungee/protocol/packet/ScoreboardObjective.java
@@ -10,10 +10,14 @@ import net.md_5.bungee.protocol.AbstractPacketHandler;
 import net.md_5.bungee.protocol.DefinedPacket;
 import net.md_5.bungee.protocol.ProtocolConstants;
 
+/**
+ * @deprecated not handled anymore
+ */
 @Data
 @NoArgsConstructor
 @AllArgsConstructor
 @EqualsAndHashCode(callSuper = false)
+@Deprecated // IvanCord
 public class ScoreboardObjective extends DefinedPacket
 {
 
diff --git a/protocol/src/main/java/net/md_5/bungee/protocol/packet/ScoreboardScore.java b/protocol/src/main/java/net/md_5/bungee/protocol/packet/ScoreboardScore.java
index 0b27fc86bf79ebbdbaf03a90285f5fb266c8c632..2e0139ba2598e508e6b92e69072585f00b9d07bd 100644
--- a/protocol/src/main/java/net/md_5/bungee/protocol/packet/ScoreboardScore.java
+++ b/protocol/src/main/java/net/md_5/bungee/protocol/packet/ScoreboardScore.java
@@ -9,10 +9,14 @@ import net.md_5.bungee.protocol.AbstractPacketHandler;
 import net.md_5.bungee.protocol.DefinedPacket;
 import net.md_5.bungee.protocol.ProtocolConstants;
 
+/**
+ * @deprecated not handled anymore
+ */
 @Data
 @NoArgsConstructor
 @AllArgsConstructor
 @EqualsAndHashCode(callSuper = false)
+@Deprecated // IvanCord
 public class ScoreboardScore extends DefinedPacket
 {
 
diff --git a/protocol/src/main/java/net/md_5/bungee/protocol/packet/Team.java b/protocol/src/main/java/net/md_5/bungee/protocol/packet/Team.java
index a5555f6aff10b821c1648b52fb4abc827fd690a9..aeddabe2ee30057af6859d2e32b5a3801322aabb 100644
--- a/protocol/src/main/java/net/md_5/bungee/protocol/packet/Team.java
+++ b/protocol/src/main/java/net/md_5/bungee/protocol/packet/Team.java
@@ -9,10 +9,14 @@ import net.md_5.bungee.protocol.AbstractPacketHandler;
 import net.md_5.bungee.protocol.DefinedPacket;
 import net.md_5.bungee.protocol.ProtocolConstants;
 
+/**
+ * @deprecated not handled anymore
+ */
 @Data
 @NoArgsConstructor
 @AllArgsConstructor
 @EqualsAndHashCode(callSuper = false)
+@Deprecated // IvanCord
 public class Team extends DefinedPacket
 {
 
diff --git a/proxy/src/main/java/io/github/waterfallmc/waterfall/conf/WaterfallConfiguration.java b/proxy/src/main/java/io/github/waterfallmc/waterfall/conf/WaterfallConfiguration.java
index 8977aaf3836f18cea4f2f585363470eea30bd761..551258c294955e75916cdef3e93f418a9ea9ba79 100644
--- a/proxy/src/main/java/io/github/waterfallmc/waterfall/conf/WaterfallConfiguration.java
+++ b/proxy/src/main/java/io/github/waterfallmc/waterfall/conf/WaterfallConfiguration.java
@@ -42,7 +42,7 @@ public abstract class WaterfallConfiguration extends Configuration { // IvanCord
     private int tabThrottle = 1000;
     private boolean disableModernTabLimiter = true;
 
-    private boolean disableEntityMetadataRewrite = false;
+    private boolean disableEntityMetadataRewrite = true; // IvanCord - default to true
     private boolean disableTabListRewrite = true;
 
     /*
diff --git a/proxy/src/main/java/net/md_5/bungee/ServerConnector.java b/proxy/src/main/java/net/md_5/bungee/ServerConnector.java
index e8480ff4319f51e9c869e6931cbaa845fe6229bd..07655f95f18d6bc988103c2b294b2ca46ddc0cb7 100644
--- a/proxy/src/main/java/net/md_5/bungee/ServerConnector.java
+++ b/proxy/src/main/java/net/md_5/bungee/ServerConnector.java
@@ -240,10 +240,12 @@ public class ServerConnector extends PacketHandler
             ch.write( new PluginMessage( user.getPendingConnection().getVersion() >= ProtocolConstants.MINECRAFT_1_13 ? "minecraft:register" : "REGISTER", Joiner.on( "\0" ).join( registeredChannels ).getBytes( StandardCharsets.UTF_8 ), false ) );
         }
 
+        /* IvanCord - comment this
         if (!user.isDisableEntityMetadataRewrite() && user.getSettings() != null )
         {
             ch.write( user.getSettings() );
         }
+         */
 
         if ( user.getForgeClientHandler().getClientModList() == null && !user.getForgeClientHandler().isHandshakeComplete() ) // Vanilla
         {
@@ -292,6 +294,8 @@ public class ServerConnector extends PacketHandler
             user.getServer().setObsolete( true );
             user.getTabListHandler().onServerChange();
 
+            // IvanCord start - remove this from handling
+            /*
             Scoreboard serverScoreboard = user.getServerSentScoreboard();
             if ( !user.isDisableEntityMetadataRewrite() ) { // Waterfall
             for ( Objective objective : serverScoreboard.getObjectives() )
@@ -308,6 +312,8 @@ public class ServerConnector extends PacketHandler
             }
             } // Waterfall
             serverScoreboard.clear();
+             */
+            // IvanCord end
 
             for ( UUID bossbar : user.getSentBossBars() )
             {
@@ -332,15 +338,19 @@ public class ServerConnector extends PacketHandler
             }
 
             user.setDimensionChange( true );
+            // IvanCord start - get rid of this
+            /*
             if ( !user.isDisableEntityMetadataRewrite() && login.getDimension() == user.getDimension() ) // Waterfall - defer
             {
                 user.unsafe().sendPacket( new Respawn( (Integer) login.getDimension() >= 0 ? -1 : 0, login.getWorldName(), login.getSeed(), login.getDifficulty(), login.getGameMode(), login.getPreviousGameMode(), login.getLevelType(), login.isDebug(), login.isFlat(), false, login.getDeathLocation() ) );
             }
+             */
+            // IvanCord end
 
             user.setServerEntityId( login.getEntityId() );
 
             // Waterfall start
-            if ( user.isDisableEntityMetadataRewrite() ) {
+            // if ( user.isDisableEntityMetadataRewrite() ) { // IvanCord - comment
                 // Ensure that we maintain consistency
                 user.setClientEntityId( login.getEntityId() );
 
@@ -359,7 +369,7 @@ public class ServerConnector extends PacketHandler
                 {
                     user.unsafe().sendPacket( new Respawn( (Integer) login.getDimension() >= 0 ? -1 : 0, login.getWorldName(), login.getSeed(), login.getDifficulty(), login.getGameMode(), login.getPreviousGameMode(), login.getLevelType(), login.isDebug(), login.isFlat(), false, login.getDeathLocation() ) );
                 }
-            }
+            // } // IvanCord - comment
             // Waterfall end
             user.unsafe().sendPacket( new Respawn( login.getDimension(), login.getWorldName(), login.getSeed(), login.getDifficulty(), login.getGameMode(), login.getPreviousGameMode(), login.getLevelType(), login.isDebug(), login.isFlat(), false, login.getDeathLocation() ) );
 
diff --git a/proxy/src/main/java/net/md_5/bungee/UserConnection.java b/proxy/src/main/java/net/md_5/bungee/UserConnection.java
index 91d7cefd315fe75d16a18f83d9760733e9412fe9..a20a3537fbf126f2ee94dfaffbc6a9805009b6e9 100644
--- a/proxy/src/main/java/net/md_5/bungee/UserConnection.java
+++ b/proxy/src/main/java/net/md_5/bungee/UserConnection.java
@@ -127,15 +127,22 @@ public final class UserConnection implements ProxiedPlayer
     private final Scoreboard serverSentScoreboard = new Scoreboard();
     @Getter
     private final Collection<UUID> sentBossBars = new HashSet<>();
+    // IvanCord start - comment this out
+    /*
     // Waterfall start
     @Getter
     private final Multimap<Integer, Integer> potions = HashMultimap.create();
     // Waterfall end
+     */ // IvanCord end
     /*========================================================================*/
     @Getter
     private String displayName;
+    // IvanCord start - comment entity rewrite
+    /*
     @Getter
     private EntityMap entityRewrite;
+     */
+    // IvanCord end
     private Locale locale;
     /*========================================================================*/
     @Getter
@@ -156,7 +163,7 @@ public final class UserConnection implements ProxiedPlayer
 
     public void init()
     {
-        this.entityRewrite = EntityMap.getEntityMap( getPendingConnection().getVersion() );
+        //this.entityRewrite = EntityMap.getEntityMap( getPendingConnection().getVersion() ); // IvanCord
 
         this.displayName = name;
 
@@ -787,14 +794,19 @@ public final class UserConnection implements ProxiedPlayer
     }
 
     @Override
+    @Deprecated // IvanCord
     public Scoreboard getScoreboard()
     {
         return serverSentScoreboard;
     }
 
+    // IvanCord start - comment this. Not used anywhere, so...
+    /*
     // Waterfall start
     public boolean isDisableEntityMetadataRewrite() {
         return entityRewrite == net.md_5.bungee.entitymap.EntityMap_Dummy.INSTANCE;
     }
     // Waterfall end
+     */
+    // IvanCord end
 }
diff --git a/proxy/src/main/java/net/md_5/bungee/connection/DownstreamBridge.java b/proxy/src/main/java/net/md_5/bungee/connection/DownstreamBridge.java
index b5681063f0ed4444a6bb522d025b4d412bad667b..8fdbc2935d7ca850709d260c5fd0f858c825bd77 100644
--- a/proxy/src/main/java/net/md_5/bungee/connection/DownstreamBridge.java
+++ b/proxy/src/main/java/net/md_5/bungee/connection/DownstreamBridge.java
@@ -150,11 +150,13 @@ public class DownstreamBridge extends PacketHandler
     @Override
     public void handle(PacketWrapper packet) throws Exception
     {
+        /* // IvanCord start - remove entity rewrites
         EntityMap rewrite = con.getEntityRewrite();
         if ( rewrite != null )
         {
             rewrite.rewriteClientbound( packet.buf, con.getServerEntityId(), con.getClientEntityId(), con.getPendingConnection().getVersion() );
         }
+         */ // IvanCord end
         con.sendPacket( packet );
     }
 
@@ -184,17 +186,31 @@ public class DownstreamBridge extends PacketHandler
     @Override
     public void handle(PlayerListItemRemove playerList) throws Exception
     {
-        con.getTabListHandler().onUpdate( TabList.rewrite( playerList ) );
+        // IvanCord start - implement waterfall skip rewrites
+        boolean skipRewrites = bungee.getConfig().isDisableTabListRewrite();
+        con.getTabListHandler().onUpdate( skipRewrites ? playerList : TabList.rewrite( playerList ) );
+        if ( !skipRewrites )
+        {
         throw CancelSendSignal.INSTANCE; // Always throw because of profile rewriting
+        }
+        // IvanCord end
     }
 
     @Override
     public void handle(PlayerListItemUpdate playerList) throws Exception
     {
-        con.getTabListHandler().onUpdate( TabList.rewrite( playerList ) );
+        // IvanCord start - implement waterfall skip rewrites
+        boolean skipRewrites = bungee.getConfig().isDisableTabListRewrite();
+        con.getTabListHandler().onUpdate( skipRewrites ? playerList : TabList.rewrite( playerList ) );
+        if ( !skipRewrites )
+        {
         throw CancelSendSignal.INSTANCE; // Always throw because of profile rewriting
+        }
+        // IvanCord end
     }
 
+    // IvanCord start - remove these from handling
+    /*
     @Override
     public void handle(ScoreboardObjective objective) throws Exception
     {
@@ -296,6 +312,8 @@ public class DownstreamBridge extends PacketHandler
             }
         }
     }
+     */
+    // IvanCord end
 
     @Override
     @SuppressWarnings("checkstyle:avoidnestedblocks")
@@ -725,6 +743,8 @@ public class DownstreamBridge extends PacketHandler
         }
     }
 
+    // IvanCord start - comment this whole handling out
+    /*
     // Waterfall start
     @Override
     public void handle(EntityEffect entityEffect) throws Exception
@@ -752,6 +772,7 @@ public class DownstreamBridge extends PacketHandler
         return entityId;
     }
     // Waterfall end
+     */ // IvanCord end
 
     @Override
     public void handle(Respawn respawn)
diff --git a/proxy/src/main/java/net/md_5/bungee/connection/UpstreamBridge.java b/proxy/src/main/java/net/md_5/bungee/connection/UpstreamBridge.java
index a48661b147d561d7f114f3ad49452b010c03e5e9..5c6fb6c92016fb9dcddc84ec514ad3f123dda96e 100644
--- a/proxy/src/main/java/net/md_5/bungee/connection/UpstreamBridge.java
+++ b/proxy/src/main/java/net/md_5/bungee/connection/UpstreamBridge.java
@@ -136,11 +136,13 @@ public class UpstreamBridge extends PacketHandler
     {
         if ( con.getServer() != null )
         {
+            /* // IvanCord start - remove entity rewrites
             EntityMap rewrite = con.getEntityRewrite();
             if ( rewrite != null )
             {
                 rewrite.rewriteServerbound( packet.buf, con.getClientEntityId(), con.getServerEntityId(), con.getPendingConnection().getVersion() );
             }
+             */ // IvanCord end
             con.getServer().getCh().write( packet );
         }
     }
diff --git a/proxy/src/main/java/net/md_5/bungee/forge/ForgeClientHandler.java b/proxy/src/main/java/net/md_5/bungee/forge/ForgeClientHandler.java
index bea2bbff94e1c359ed7e9b6d932641390eccff84..cba7577b65c18d090102b4d4061223682b377bde 100644
--- a/proxy/src/main/java/net/md_5/bungee/forge/ForgeClientHandler.java
+++ b/proxy/src/main/java/net/md_5/bungee/forge/ForgeClientHandler.java
@@ -97,14 +97,19 @@ public class ForgeClientHandler
     {
         state = ForgeClientHandshakeState.HELLO;
 
+        // IvanCord start - comment this out
+        /*
         // This issue only exists in Forge 1.8.9
         if (this.con.getPendingConnection().getVersion() == ProtocolConstants.MINECRAFT_1_8) {
             this.resetAllThePotions(con);
         }
+         */ // IvanCord end
 
         con.unsafe().sendPacket( ForgeConstants.FML_RESET_HANDSHAKE );
     }
 
+    // IvanCord start - comment this out
+    /*
     private void resetAllThePotions(UserConnection con) {
         // Just to be sure
         for (Map.Entry<Integer, Integer> entry: con.getPotions().entries()) {
@@ -112,6 +117,7 @@ public class ForgeClientHandler
         }
         con.getPotions().clear();
     }
+     */ // IvanCord end
 
     /**
      * Sends the server mod list to the client, or stores it for sending later.
