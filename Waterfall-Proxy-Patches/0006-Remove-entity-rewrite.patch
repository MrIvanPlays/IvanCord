From e9e999da00fdf49b40c5f7eb4275cdfc931cc5b0 Mon Sep 17 00:00:00 2001
From: MrIvanPlays <pekov.ivan@abv.bg>
Date: Sun, 28 Apr 2019 09:53:09 +0300
Subject: [PATCH] Remove entity rewrite

This patch gets rid of the entity rewrite, ignoring the disable entity
metadata rewrite thing in Waterfall. It just gets rid of it.
All score and team packets are not handled by the proxy in no way. They
dont either register!

diff --git a/api/src/main/java/net/md_5/bungee/api/connection/ProxiedPlayer.java b/api/src/main/java/net/md_5/bungee/api/connection/ProxiedPlayer.java
index b7b89c421..5e7b51f80 100644
--- a/api/src/main/java/net/md_5/bungee/api/connection/ProxiedPlayer.java
+++ b/api/src/main/java/net/md_5/bungee/api/connection/ProxiedPlayer.java
@@ -382,6 +382,8 @@ public interface ProxiedPlayer extends Connection, CommandSender
      * Get the {@link Scoreboard} that belongs to this player.
      *
      * @return this player's {@link Scoreboard}
+     * @deprecated not handled anymore
      */
+    @Deprecated // IvanCord
     Scoreboard getScoreboard();
 }
diff --git a/api/src/main/java/net/md_5/bungee/api/score/Objective.java b/api/src/main/java/net/md_5/bungee/api/score/Objective.java
index 0dd256467..1e77f861e 100644
--- a/api/src/main/java/net/md_5/bungee/api/score/Objective.java
+++ b/api/src/main/java/net/md_5/bungee/api/score/Objective.java
@@ -5,9 +5,12 @@ import lombok.Data;
 
 /**
  * Represents an objective entry.
+ *
+ * @deprecated not handled anymore
  */
 @Data
 @AllArgsConstructor
+@Deprecated // IvanCord
 public class Objective
 {
 
diff --git a/api/src/main/java/net/md_5/bungee/api/score/Position.java b/api/src/main/java/net/md_5/bungee/api/score/Position.java
index c3da93b22..2f6505d9c 100644
--- a/api/src/main/java/net/md_5/bungee/api/score/Position.java
+++ b/api/src/main/java/net/md_5/bungee/api/score/Position.java
@@ -2,7 +2,10 @@ package net.md_5.bungee.api.score;
 
 /**
  * Represents locations for a scoreboard to be displayed.
+ *
+ * @deprecated not handled anymore
  */
+@Deprecated // IvanCord
 public enum Position
 {
 
diff --git a/api/src/main/java/net/md_5/bungee/api/score/Score.java b/api/src/main/java/net/md_5/bungee/api/score/Score.java
index cb906ddd0..3020fc74a 100644
--- a/api/src/main/java/net/md_5/bungee/api/score/Score.java
+++ b/api/src/main/java/net/md_5/bungee/api/score/Score.java
@@ -4,8 +4,11 @@ import lombok.Data;
 
 /**
  * Represents a scoreboard score entry.
+ *
+ * @deprecated not handled anymore
  */
 @Data
+@Deprecated // IvanCord
 public class Score
 {
 
diff --git a/api/src/main/java/net/md_5/bungee/api/score/Scoreboard.java b/api/src/main/java/net/md_5/bungee/api/score/Scoreboard.java
index c10c7b11e..eb1e8a889 100644
--- a/api/src/main/java/net/md_5/bungee/api/score/Scoreboard.java
+++ b/api/src/main/java/net/md_5/bungee/api/score/Scoreboard.java
@@ -8,8 +8,12 @@ import java.util.Map;
 import lombok.Data;
 import lombok.NoArgsConstructor;
 
+/**
+ * @deprecated not handled anymore
+ */
 @Data
 @NoArgsConstructor
+@Deprecated // IvanCord
 public class Scoreboard
 {
 
diff --git a/api/src/main/java/net/md_5/bungee/api/score/Team.java b/api/src/main/java/net/md_5/bungee/api/score/Team.java
index 255263208..bdff0641d 100644
--- a/api/src/main/java/net/md_5/bungee/api/score/Team.java
+++ b/api/src/main/java/net/md_5/bungee/api/score/Team.java
@@ -8,7 +8,11 @@ import java.util.Set;
 
 import io.github.waterfallmc.waterfall.utils.LowMemorySet;
 
+/**
+ * @deprecated not handled anymore
+ */
 @Data
+@Deprecated // IvanCord
 public class Team
 {
 
diff --git a/protocol/src/main/java/net/md_5/bungee/protocol/Protocol.java b/protocol/src/main/java/net/md_5/bungee/protocol/Protocol.java
index 870938079..652e4ca2b 100644
--- a/protocol/src/main/java/net/md_5/bungee/protocol/Protocol.java
+++ b/protocol/src/main/java/net/md_5/bungee/protocol/Protocol.java
@@ -31,15 +31,20 @@ import net.md_5.bungee.protocol.packet.PlayerListHeaderFooter;
 import net.md_5.bungee.protocol.packet.PlayerListItem;
 import net.md_5.bungee.protocol.packet.PluginMessage;
 import net.md_5.bungee.protocol.packet.Respawn;
+// IvanCord - comment these
+/*
 import net.md_5.bungee.protocol.packet.ScoreboardDisplay;
 import net.md_5.bungee.protocol.packet.ScoreboardObjective;
 import net.md_5.bungee.protocol.packet.ScoreboardScore;
+ */
 import net.md_5.bungee.protocol.packet.SetCompression;
 import net.md_5.bungee.protocol.packet.StatusRequest;
 import net.md_5.bungee.protocol.packet.StatusResponse;
 import net.md_5.bungee.protocol.packet.TabCompleteRequest;
 import net.md_5.bungee.protocol.packet.TabCompleteResponse;
+/* IvanCord
 import net.md_5.bungee.protocol.packet.Team;
+ */
 import net.md_5.bungee.protocol.packet.Title;
 import net.md_5.bungee.protocol.packet.ViewDistance;
 
@@ -129,6 +134,8 @@ public enum Protocol
                     map( ProtocolConstants.MINECRAFT_1_9, 0x0E ),
                     map( ProtocolConstants.MINECRAFT_1_13, 0x10 )
             );
+            // IvanCord start - remove these from handling
+            /*
             TO_CLIENT.registerPacket(
                     ScoreboardObjective.class,
                     map( ProtocolConstants.MINECRAFT_1_8, 0x3B ),
@@ -165,6 +172,8 @@ public enum Protocol
                     map( ProtocolConstants.MINECRAFT_1_13, 0x47 ),
                     map( ProtocolConstants.MINECRAFT_1_14, 0x4B )
             );
+             */
+            // IvanCord end
             TO_CLIENT.registerPacket(
                     PluginMessage.class,
                     map( ProtocolConstants.MINECRAFT_1_8, 0x3F ),
diff --git a/protocol/src/main/java/net/md_5/bungee/protocol/packet/ScoreboardDisplay.java b/protocol/src/main/java/net/md_5/bungee/protocol/packet/ScoreboardDisplay.java
index b8f30276d..578095d50 100644
--- a/protocol/src/main/java/net/md_5/bungee/protocol/packet/ScoreboardDisplay.java
+++ b/protocol/src/main/java/net/md_5/bungee/protocol/packet/ScoreboardDisplay.java
@@ -8,10 +8,14 @@ import lombok.NoArgsConstructor;
 import net.md_5.bungee.protocol.AbstractPacketHandler;
 import net.md_5.bungee.protocol.DefinedPacket;
 
+/**
+ * @deprecated not handled anymore
+ */
 @Data
 @NoArgsConstructor
 @AllArgsConstructor
 @EqualsAndHashCode(callSuper = false)
+@Deprecated // IvanCord
 public class ScoreboardDisplay extends DefinedPacket
 {
 
diff --git a/protocol/src/main/java/net/md_5/bungee/protocol/packet/ScoreboardObjective.java b/protocol/src/main/java/net/md_5/bungee/protocol/packet/ScoreboardObjective.java
index 3c7905d54..6fa90c03f 100644
--- a/protocol/src/main/java/net/md_5/bungee/protocol/packet/ScoreboardObjective.java
+++ b/protocol/src/main/java/net/md_5/bungee/protocol/packet/ScoreboardObjective.java
@@ -10,10 +10,14 @@ import net.md_5.bungee.protocol.AbstractPacketHandler;
 import net.md_5.bungee.protocol.DefinedPacket;
 import net.md_5.bungee.protocol.ProtocolConstants;
 
+/**
+ * @deprecated not handled anymore
+ */
 @Data
 @NoArgsConstructor
 @AllArgsConstructor
 @EqualsAndHashCode(callSuper = false)
+@Deprecated // IvanCord
 public class ScoreboardObjective extends DefinedPacket
 {
 
diff --git a/protocol/src/main/java/net/md_5/bungee/protocol/packet/ScoreboardScore.java b/protocol/src/main/java/net/md_5/bungee/protocol/packet/ScoreboardScore.java
index 0b27fc86b..2e0139ba2 100644
--- a/protocol/src/main/java/net/md_5/bungee/protocol/packet/ScoreboardScore.java
+++ b/protocol/src/main/java/net/md_5/bungee/protocol/packet/ScoreboardScore.java
@@ -9,10 +9,14 @@ import net.md_5.bungee.protocol.AbstractPacketHandler;
 import net.md_5.bungee.protocol.DefinedPacket;
 import net.md_5.bungee.protocol.ProtocolConstants;
 
+/**
+ * @deprecated not handled anymore
+ */
 @Data
 @NoArgsConstructor
 @AllArgsConstructor
 @EqualsAndHashCode(callSuper = false)
+@Deprecated // IvanCord
 public class ScoreboardScore extends DefinedPacket
 {
 
diff --git a/protocol/src/main/java/net/md_5/bungee/protocol/packet/Team.java b/protocol/src/main/java/net/md_5/bungee/protocol/packet/Team.java
index 85d386c04..2bfbcb3f5 100644
--- a/protocol/src/main/java/net/md_5/bungee/protocol/packet/Team.java
+++ b/protocol/src/main/java/net/md_5/bungee/protocol/packet/Team.java
@@ -9,10 +9,14 @@ import net.md_5.bungee.protocol.AbstractPacketHandler;
 import net.md_5.bungee.protocol.DefinedPacket;
 import net.md_5.bungee.protocol.ProtocolConstants;
 
+/**
+ * @deprecated not handled anymore
+ */
 @Data
 @NoArgsConstructor
 @AllArgsConstructor
 @EqualsAndHashCode(callSuper = false)
+@Deprecated // IvanCord
 public class Team extends DefinedPacket
 {
 
diff --git a/proxy/src/main/java/io/github/waterfallmc/waterfall/conf/WaterfallConfiguration.java b/proxy/src/main/java/io/github/waterfallmc/waterfall/conf/WaterfallConfiguration.java
index f316810b1..a5ec787c7 100644
--- a/proxy/src/main/java/io/github/waterfallmc/waterfall/conf/WaterfallConfiguration.java
+++ b/proxy/src/main/java/io/github/waterfallmc/waterfall/conf/WaterfallConfiguration.java
@@ -53,7 +53,7 @@ public abstract class WaterfallConfiguration extends Configuration { // IvanCord
      */
     private boolean allowEmptyPackets = false;
 
-    private boolean disableEntityMetadataRewrite = false;
+    private boolean disableEntityMetadataRewrite = true; // IvanCord - default to true
 
     @Override
     public void load() {
diff --git a/proxy/src/main/java/net/md_5/bungee/ServerConnector.java b/proxy/src/main/java/net/md_5/bungee/ServerConnector.java
index bd8d81907..531669e78 100644
--- a/proxy/src/main/java/net/md_5/bungee/ServerConnector.java
+++ b/proxy/src/main/java/net/md_5/bungee/ServerConnector.java
@@ -226,10 +226,12 @@ public class ServerConnector extends PacketHandler
             ch.write( message );
         }
 
+        /* IvanCord - comment this
         if (!user.isDisableEntityMetadataRewrite() && user.getSettings() != null )
         {
             ch.write( user.getSettings() );
         }
+         */
 
         if ( user.getForgeClientHandler().getClientModList() == null && !user.getForgeClientHandler().isHandshakeComplete() ) // Vanilla
         {
@@ -259,6 +261,8 @@ public class ServerConnector extends PacketHandler
             user.getServer().setObsolete( true );
             user.getTabListHandler().onServerChange();
 
+            // IvanCord start - remove this from handling
+            /*
             Scoreboard serverScoreboard = user.getServerSentScoreboard();
             if ( !user.isDisableEntityMetadataRewrite() ) { // Waterfall
             for ( Objective objective : serverScoreboard.getObjectives() )
@@ -275,6 +279,8 @@ public class ServerConnector extends PacketHandler
             }
             } // Waterfall
             serverScoreboard.clear();
+             */
+            // IvanCord end
 
             for ( UUID bossbar : user.getSentBossBars() )
             {
@@ -294,14 +300,18 @@ public class ServerConnector extends PacketHandler
             user.unsafe().sendPacket( new EntityStatus( user.getClientEntityId(), login.isReducedDebugInfo() ? EntityStatus.DEBUG_INFO_REDUCED : EntityStatus.DEBUG_INFO_NORMAL ) );
 
             user.setDimensionChange( true );
+            // IvanCord start - get rid of this
+            /*
             if ( !user.isDisableEntityMetadataRewrite() && login.getDimension() == user.getDimension() ) // Waterfall - defer
             {
                 user.unsafe().sendPacket( new Respawn( ( login.getDimension() >= 0 ? -1 : 0 ), login.getDifficulty(), login.getGameMode(), login.getLevelType() ) );
             }
+             */
+            // IvanCord end
 
             user.setServerEntityId( login.getEntityId() );
             // Waterfall start
-            if ( user.isDisableEntityMetadataRewrite() ) {
+            // if ( user.isDisableEntityMetadataRewrite() ) { // IvanCord - comment
                 // Ensure that we maintain consistency
                 user.setClientEntityId( login.getEntityId() );
 
@@ -318,7 +328,7 @@ public class ServerConnector extends PacketHandler
                 if (user.getDimension() == login.getDimension()) {
                     user.unsafe().sendPacket( new Respawn(user.getDimension() == 0 ? -1 : 0, login.getDifficulty(), login.getGameMode(), login.getLevelType()));
                 }
-            }
+            // } // IvanCord - comment
             // Waterfall end
             user.unsafe().sendPacket( new Respawn( login.getDimension(), login.getDifficulty(), login.getGameMode(), login.getLevelType() ) );
             if ( user.getPendingConnection().getVersion() >= ProtocolConstants.MINECRAFT_1_14 )
diff --git a/proxy/src/main/java/net/md_5/bungee/UserConnection.java b/proxy/src/main/java/net/md_5/bungee/UserConnection.java
index 2b4b069b5..812a55c39 100644
--- a/proxy/src/main/java/net/md_5/bungee/UserConnection.java
+++ b/proxy/src/main/java/net/md_5/bungee/UserConnection.java
@@ -41,7 +41,9 @@ import net.md_5.bungee.api.event.ServerConnectEvent;
 import net.md_5.bungee.api.score.Scoreboard;
 import net.md_5.bungee.chat.ComponentSerializer;
 import net.md_5.bungee.connection.InitialHandler;
+/* IvanCord - comment this
 import net.md_5.bungee.entitymap.EntityMap;
+ */
 import net.md_5.bungee.forge.ForgeClientHandler;
 import net.md_5.bungee.forge.ForgeConstants;
 import net.md_5.bungee.forge.ForgeServerHandler;
@@ -134,8 +136,12 @@ public final class UserConnection implements ProxiedPlayer
     /*========================================================================*/
     @Getter
     private String displayName;
+    // IvanCord start - comment entity rewrite
+    /*
     @Getter
     private EntityMap entityRewrite;
+     */
+    // IvanCord end
     private Locale locale;
     /*========================================================================*/
     @Getter
@@ -157,6 +163,8 @@ public final class UserConnection implements ProxiedPlayer
 
     public void init()
     {
+        // IvanCord start - comment this
+        /*
         // Waterfall start
         disableEntityMetadaRewrite = bungee.getConfig().isDisableEntityMetadataRewrite();
         if ( disableEntityMetadaRewrite )
@@ -165,6 +173,8 @@ public final class UserConnection implements ProxiedPlayer
         } else
         // Waterfall end
         this.entityRewrite = EntityMap.getEntityMap( getPendingConnection().getVersion() );
+         */
+        // IvanCord end
 
         this.displayName = name;
 
@@ -745,14 +755,19 @@ public final class UserConnection implements ProxiedPlayer
     }
 
     @Override
+    @Deprecated // IvanCord
     public Scoreboard getScoreboard()
     {
         return serverSentScoreboard;
     }
 
+    // IvanCord start - comment this. Not used anywhere, so...
+    /*
     // Waterfall start
     public boolean isDisableEntityMetadataRewrite() {
         return disableEntityMetadaRewrite;
     }
     // Waterfall end
+     */
+    // IvanCord end
 }
diff --git a/proxy/src/main/java/net/md_5/bungee/connection/DownstreamBridge.java b/proxy/src/main/java/net/md_5/bungee/connection/DownstreamBridge.java
index 61900a059..8d7918329 100644
--- a/proxy/src/main/java/net/md_5/bungee/connection/DownstreamBridge.java
+++ b/proxy/src/main/java/net/md_5/bungee/connection/DownstreamBridge.java
@@ -39,11 +39,14 @@ import net.md_5.bungee.api.event.ServerDisconnectEvent;
 import net.md_5.bungee.api.event.ServerKickEvent;
 import net.md_5.bungee.api.event.TabCompleteResponseEvent;
 import net.md_5.bungee.api.plugin.Command;
+// IvanCord - comment not needed imports
+/*
 import net.md_5.bungee.api.score.Objective;
 import net.md_5.bungee.api.score.Position;
 import net.md_5.bungee.api.score.Score;
 import net.md_5.bungee.api.score.Scoreboard;
 import net.md_5.bungee.api.score.Team;
+ */
 import net.md_5.bungee.chat.ComponentSerializer;
 import net.md_5.bungee.netty.ChannelWrapper;
 import net.md_5.bungee.netty.PacketHandler;
@@ -59,9 +62,12 @@ import net.md_5.bungee.protocol.packet.Kick;
 import net.md_5.bungee.protocol.packet.PlayerListItem;
 import net.md_5.bungee.protocol.packet.PluginMessage;
 import net.md_5.bungee.protocol.packet.Respawn;
+// IvanCord - comment not needed imports
+/*
 import net.md_5.bungee.protocol.packet.ScoreboardDisplay;
 import net.md_5.bungee.protocol.packet.ScoreboardObjective;
 import net.md_5.bungee.protocol.packet.ScoreboardScore;
+ */
 import net.md_5.bungee.protocol.packet.SetCompression;
 import net.md_5.bungee.protocol.packet.TabCompleteResponse;
 import net.md_5.bungee.tab.TabList;
@@ -138,7 +144,9 @@ public class DownstreamBridge extends PacketHandler
     @Override
     public void handle(PacketWrapper packet) throws Exception
     {
+        /* IvanCord - get rid of entity rewrites
         con.getEntityRewrite().rewriteClientbound( packet.buf, con.getServerEntityId(), con.getClientEntityId(), con.getPendingConnection().getVersion() );
+         */
         con.sendPacket( packet );
     }
 
@@ -156,6 +164,8 @@ public class DownstreamBridge extends PacketHandler
         throw CancelSendSignal.INSTANCE; // Always throw because of profile rewriting
     }
 
+    // IvanCord start - remove these from handling
+    /*
     @Override
     public void handle(ScoreboardObjective objective) throws Exception
     {
@@ -257,6 +267,8 @@ public class DownstreamBridge extends PacketHandler
             }
         }
     }
+     */
+    // IvanCord end
 
     @Override
     public void handle(PluginMessage pluginMessage) throws Exception
@@ -625,7 +637,7 @@ public class DownstreamBridge extends PacketHandler
     @Override
     public void handle(EntityEffect entityEffect) throws Exception
     {
-        if (con.isDisableEntityMetadataRewrite()) return; // Waterfall
+        // if (con.isDisableEntityMetadataRewrite()) return; // Waterfall // IvanCord - comment this
         // Don't send any potions when switching between servers (which involves a handshake), which can trigger a race
         // condition on the client.
         if (this.con.getForgeClientHandler().isForgeUser() && !this.con.getForgeClientHandler().isHandshakeComplete()) {
@@ -637,7 +649,7 @@ public class DownstreamBridge extends PacketHandler
     @Override
     public void handle(EntityRemoveEffect removeEffect) throws Exception
     {
-        if (con.isDisableEntityMetadataRewrite()) return; // Waterfall
+        // if (con.isDisableEntityMetadataRewrite()) return; // Waterfall // IvanCord - comment this
         con.getPotions().remove(rewriteEntityId(removeEffect.getEntityId()), removeEffect.getEffectId());
     }
 
diff --git a/proxy/src/main/java/net/md_5/bungee/connection/UpstreamBridge.java b/proxy/src/main/java/net/md_5/bungee/connection/UpstreamBridge.java
index 51d0c6cfe..22313d989 100644
--- a/proxy/src/main/java/net/md_5/bungee/connection/UpstreamBridge.java
+++ b/proxy/src/main/java/net/md_5/bungee/connection/UpstreamBridge.java
@@ -116,7 +116,9 @@ public class UpstreamBridge extends PacketHandler
     {
         if ( con.getServer() != null )
         {
+            /* IvanCord - get rid of entity rewrites
             con.getEntityRewrite().rewriteServerbound( packet.buf, con.getClientEntityId(), con.getServerEntityId(), con.getPendingConnection().getVersion() );
+             */
             con.getServer().getCh().write( packet );
         }
     }
-- 
2.22.0.windows.1

