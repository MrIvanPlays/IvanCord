From 78c75f08fcf2e3a07f48981855893111a1c86c83 Mon Sep 17 00:00:00 2001
From: MrIvanPlays <pekov.ivan@abv.bg>
Date: Mon, 22 Apr 2019 10:45:15 +0300
Subject: [PATCH] Kick to lobby support


diff --git a/api/src/main/java/net/md_5/bungee/api/ProxyConfig.java b/api/src/main/java/net/md_5/bungee/api/ProxyConfig.java
index cbcf8a24..4687e7c4 100644
--- a/api/src/main/java/net/md_5/bungee/api/ProxyConfig.java
+++ b/api/src/main/java/net/md_5/bungee/api/ProxyConfig.java
@@ -239,4 +239,15 @@ public interface ProxyConfig
      * @return Should we disable entity metadata rewriting?
      */
     boolean isDisableEntityMetadataRewrite();
+
+    // IvanCord start
+
+    /**
+     * If this is true, a listener to {@link net.md_5.bungee.api.event.ServerKickEvent} will be
+     * registered, which will send a kicked player from x server to the first server in {@link ListenerInfo#getServerPriority()}
+     *
+     * @return should the player kicked be transferred to lobby
+     */
+    boolean isKickToLobby();
+    // IvanCord end
 }
diff --git a/proxy/src/main/java/com/github/mrivanplays/ivancord/conf/IvanCordConfiguration.java b/proxy/src/main/java/com/github/mrivanplays/ivancord/conf/IvanCordConfiguration.java
index 96bb60f5..dea499b2 100644
--- a/proxy/src/main/java/com/github/mrivanplays/ivancord/conf/IvanCordConfiguration.java
+++ b/proxy/src/main/java/com/github/mrivanplays/ivancord/conf/IvanCordConfiguration.java
@@ -22,16 +22,21 @@ package com.github.mrivanplays.ivancord.conf;
 import java.io.File;
 
 import io.github.waterfallmc.waterfall.conf.WaterfallConfiguration;
+import lombok.Getter;
 import net.md_5.bungee.conf.YamlConfig;
 
+@Getter
 public class IvanCordConfiguration extends WaterfallConfiguration
 {
 
+    private boolean kickToLobby = true;
+
     @Override
     public void load()
     {
         super.load();
         YamlConfig config = new YamlConfig( new File( "ivancord.yml" ) );
         config.load( false );
+        kickToLobby = config.getBoolean( "kick_to_lobby", kickToLobby );
     }
 }
diff --git a/proxy/src/main/java/net/md_5/bungee/connection/DownstreamBridge.java b/proxy/src/main/java/net/md_5/bungee/connection/DownstreamBridge.java
index 1f8a2439..3a5ae3ee 100644
--- a/proxy/src/main/java/net/md_5/bungee/connection/DownstreamBridge.java
+++ b/proxy/src/main/java/net/md_5/bungee/connection/DownstreamBridge.java
@@ -506,14 +506,37 @@ public class DownstreamBridge extends PacketHandler
         {
             def = null;
         }
-        ServerKickEvent event = bungee.getPluginManager().callEvent( new ServerKickEvent( con, server.getInfo(), ComponentSerializer.parse( kick.getMessage() ), def, ServerKickEvent.State.CONNECTED, ServerKickEvent.Cause.SERVER ) ); // Waterfall
-        if ( event.isCancelled() && event.getCancelServer() != null )
+        // IvanCord start - kick to lobby
+        boolean kickToLobby = bungee.getConfig().isKickToLobby();
+        ServerInfo defaultServer = bungee.getServerInfo( bungee.getConfig().getListeners().stream().findFirst().get().getDefaultServer() );
+        ServerKickEvent event = bungee.getPluginManager().callEvent( new ServerKickEvent( con, server.getInfo(),
+                ComponentSerializer.parse( kick.getMessage() ), def, ServerKickEvent.State.CONNECTED, ServerKickEvent.Cause.SERVER ) );
+        if ( kickToLobby )
         {
-            con.connectNow( event.getCancelServer(), ServerConnectEvent.Reason.KICK_REDIRECT );
+            if ( defaultServer != null )
+            {
+                con.connectNow( defaultServer, ServerConnectEvent.Reason.KICK_REDIRECT );
+            } else
+            {
+                if ( event.isCancelled() && event.getCancelServer() != null )
+                {
+                    con.connectNow( event.getCancelServer(), ServerConnectEvent.Reason.KICK_REDIRECT );
+                } else
+                {
+                    con.disconnect0( event.getKickReasonComponent() ); // TODO: Prefix our own stuff
+                }
+            }
         } else
         {
-            con.disconnect0( event.getKickReasonComponent() ); // TODO: Prefix our own stuff.
+            if ( event.isCancelled() && event.getCancelServer() != null )
+            {
+                con.connectNow( event.getCancelServer(), ServerConnectEvent.Reason.KICK_REDIRECT );
+            } else
+            {
+                con.disconnect0( event.getKickReasonComponent() ); // TODO: Prefix our own stuff
+            }
         }
+        // IvanCord end
         server.setObsolete( true );
         throw CancelSendSignal.INSTANCE;
     }
diff --git a/proxy/src/main/resources/messages.properties b/proxy/src/main/resources/messages.properties
index dfb58c12..d917c74a 100644
--- a/proxy/src/main/resources/messages.properties
+++ b/proxy/src/main/resources/messages.properties
@@ -24,3 +24,4 @@ name_too_long=Cannot have username longer than 16 characters
 name_invalid=Username contains invalid characters.
 ping_cannot_connect=\u00a7c[Bungee] Can't connect to server.
 offline_mode_player=Not authenticated with Minecraft.net
+kick_to_lobby=You were kicked from server {0} with reason {1}
-- 
2.21.0.windows.1

